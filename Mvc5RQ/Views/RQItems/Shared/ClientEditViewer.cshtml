@using RQDigitalObjects
@model Mvc5RQ.Models.RQItem
@*@Html.ValidationSummary()*@
<style>
    .edit-form {
        position: relative;
    }
</style>
<div class="rq-ajax-wait" style="display: none"></div>
<form id="EditForm" class="edit-form pure-form">
    <fieldset>
        <label for="ID" class="editor-label">ID: </label><span id="idval"></span>
        <label for="DocNo" class="editor-label">Dok-Nr.: </label><span id="doknrval"></span>
        @Html.EditorFor(rqitem => rqitem.Title, new { label = "Titel", classname = "title" })
        @Html.EditorFor(rqitem => rqitem.Authors, new { label = "Autoren", classname = "authors" })
        @Html.EditorFor(rqitem => rqitem.Source, new { label = "Quelle", classname = "source" })
        @Html.EditorFor(rqitem => rqitem.Edition, new { label = "Ausgabe", classname = "edition" })
        @Html.EditorFor(rqitem => rqitem.ISDN, new { label = "ISDN", classname = "isdn" })
        @Html.EditorFor(rqitem => rqitem.Coden, new { label = "Coden", classname = "coden" })
        @Html.EditorFor(rqitem => rqitem.Institutions, new { label = "Institutionen", classname = "institutions" })
        @Html.EditorFor(rqitem => rqitem.Series, new { label = "Reihe", classname = "series" })
        @Html.EditorFor(rqitem => rqitem.Locality, new { label = "Ort", classname = "locality" })
        @Html.EditorFor(rqitem => rqitem.Publisher, new { label = "Verlag", classname = "publisher" })
        @Html.EditorFor(rqitem => rqitem.PublTime, new { label = "Jahr", classname = "publtime" })
        @Html.EditorFor(rqitem => rqitem.Volume, new { label = "Band", classname = "volume" })
        @Html.EditorFor(rqitem => rqitem.Issue, new { label = "Heft", classname = "issue" })
        @Html.EditorFor(rqitem => rqitem.Pages, new { label = "Format", classname = "pages" })
        <span class="editor-label"><label for="Toc">Inhaltsverzeichnis</label></span>        
        <input type="button" value="attach object" id="tocAttach" />
        <div  class="toc" id="Toc" title="Table of content">
            <ol id="tocList" />
            <script id="tocTemplate" type="text/x-jsrender"> 
                <li>
                    <span class="editor-field"><input class="tocitemname" type="text" value="{{>name}}"/></span>
                    <span class="editor-field"><input class="tocitemposition" type="text" value="{{>position}}"/></span>
                    <span class="editor-field"><input class="tocitemadress" type="text" value="{{>adress}}"/></span>
                </li>
            </script>
        </div>        
        @Html.EditorFor(rqitem => rqitem.Language, new { label = "Sprache", classname = "language" })
        @Html.EditorFor(rqitem => rqitem.Signature, new { label = "Standort", classname = "signature" })
        @Html.EditorFor(rqitem => rqitem.DocTypeCode, new { label = "Dokumenttyp-Code", classname = "doctypecode" })
        @Html.EditorFor(rqitem => rqitem.DocTypeName, new { label = "Dokumenttyp", classname = "publisher" })
        @Html.EditorFor(rqitem => rqitem.IndexTerms, new { label = "Schlagworte", classname = "indexterms" })
        @Html.EditorFor(rqitem => rqitem.Subjects, new { label = "Fächer", classname = "subjects" })
        @Html.EditorFor(rqitem => rqitem.WorkType, new { label = "Gattung", classname = "worktype" })
        @Html.EditorFor(rqitem => rqitem.AboutLocation, new { label = "Ortsbezug", classname = "aboutlocation" })
        @Html.EditorFor(rqitem => rqitem.AboutTime, new { label = "Zeitbezug", classname = "abouttime" })
        @Html.EditorFor(rqitem => rqitem.AboutPersons, new { label = "Personenbezug", classname = "aboutpersons" })
        @*@Html.EditorFor(rqitem => rqitem.Classification, "rqdescriptor", new { label = "Klassifikation", classname = "classification" })*@
        @Html.EditorFor(rqitem => rqitem.ClassificationFieldContent, new { label = "Klassifikation", classname = "classification" })
        @Html.EditorFor(rqitem => rqitem.Abstract, new { label = "Inhaltsbeschreibung", classname = "abstract" })
        @Html.EditorFor(rqitem => rqitem.CreateLocation, new { label = "Entstehungsort", classname = "createlocation" })
        @Html.EditorFor(rqitem => rqitem.CreateTime, new { label = "Entstehungszeit", classname = "createtime" })
        @Html.EditorFor(rqitem => rqitem.Notes, new { label = "Fußnoten", classname = "notes" })
      	<br class="clear" />
    	<input type="submit" value="Add Item" id="btn-submit-item" /><input type="button" value="Reset" id="btn-reset" onclick="reset()" /><input type="button" value="Cancel" id="btn-cancel" onclick="cancel()" />
    </fieldset>
</form>
<div id="EditDialog" class="edit-dialog" style="display: none">
</div>
<div id="AttachTocDialog" class="attach-toc-dialog" style="display: none">
    <p class="instruction">Geben Sie den Typ des digitalen Objekts und den Namen des Unterverzeichnisses ein, in dem das digitale Objekt gespeichert ist.<br />Das Unterverzeicnhis muss in dem für die Eingangsbearbeitung des betreffenden Objekt-Typs ausgewählten Verzeichnis liegen (s. Auswahl von Optionen).<br />Sie müssen für dieses Verzeichnis Schreibrechte besitzen.</p>
    <span class="editor-label"><label for="ObjAdress">Adresse</label></span>
    <span class="editor-field"><input class="objadress" id="ObjAdress" name="ObjAdress" type="text" /></span>
    <span class="editor-label"><label>Typ</label></span>
    <form class="digital-object-type editor-field" id="DigitalObjectType" action="" method="get">
        <input type="radio" name="DigitalObjectType" id="Text Audio (mp3)" value="mp3Text" />Text-Tonaufzeichnung (MP3)<br />
        <input type="radio" name="DigitalObjectType" id="Music Audio (mp3)" value="mp3Music" />Musik-Tonaufzeichnung (MP3)<br />
        <input type="radio" name="DigitalObjectType" id="Video (m4v)" value="@(DigitalObject.DOType.mv4Video.ToString())">Bildaufzeichnung (M4V)<br />
        <input type="radio" name="DigitalObjectType" id="Document Collection (pdf)" value="@(DigitalObject.DOType.pdfDocument.ToString())">Dokument-Konvolut (PDF)<br />
    </form>
</div>
