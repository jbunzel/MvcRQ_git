<script type="text/javascript">

    function renderXmlList(data, docno) {
        var xml = window.ActiveXObject ? data.xml : (new XMLSerializer().serializeToString(data));
        //$("#transformResult").transform({ xmlstr: xml, xsl: "/xslt/ViewTransforms/RQ2SingleItemView.xslt" });
        $("#"+docno).transform({ xmlstr: xml, xsl: "/xslt/ViewTransforms/RQ2SingleItemView.xslt" });
    }

    function getRQItem(docno) {
        if ($("#" + docno).is(':empty')) {
            $.ajax({
                url: document.location.href + "/" + docno,
                type: "GET",
                data: null,
                dataType: "xml",
                success: function (data) {
                    renderXmlList(data, docno);
                }
            });
        }
        $("#" + docno).toggle("slow");
    }
</script>
<span>Der ListViewer zeigt den RQItemSet als serverseitig erzeugte Titelliste an. Die Einzeltitel werden mit der XML-Standardserialisierung abgerufen und auf dem Client in HTML transformiert.</span>
<table>
    <thead>
        <th>Title</th>
    </thead>
    <tbody>
        @foreach (MvcRQ.Models.RQItem rqitem in Model)
        {
        <tr>
<!--
            <td>@Html.RouteLink(rqitem.Title, "SingleRQItem", new { rqitemID = rqitem.DocNo }, new { OnClick = "getRQItem();" });</td>
-->
            <td>
                <a href="javascript:getRQItem('@rqitem.DocNo');">
                    @if (rqitem.Title.Length > 180)
                    {
                        @rqitem.Title.Substring(0, 180);
                    }
                    else
                    {
                        @rqitem.Title;
                    }   
                </a>
                <div id="@rqitem.DocNo" style="display:none"></div>
            </td>
        </tr>
        }
    </tbody>
</table>
<p>
    <a href="?verb=New">Add New</a>
</p>

