<?xml version="1.0"?>
<project name="dotNetRDF Core Library" default="build-nightly" basedir="../../">
  <description>Generates the dotNetRDF Core Library Builds</description>

  <!-- Load in the <ftp> task dll -->
  <loadtasks assembly="Build/nant/ftptask.dll" />
  
  <!-- Disable Building and Compiling Options -->
  <property name="dotnetrdf.nobuild" value="" />
  <property name="dotnetrdf.nocompile" value="" />
  <property name="dotnetrdf.nosilverlight" value="" />
  <property name="dotnetrdf.nowindowsphone" value="${dotnetrdf.nosilverlight}" />

  <!-- Set the Compiler Warnings we want to ignore -->
  <property name="dotnetrdf.nowarn" value="1591;0067" />

  <!-- Version Properties -->
  <!-- When generating ZIP files with the dist targets use the command line -d option to set these appropriately -->
  <property name="dotnetrdf.version" value="051" />
  <property name="dotnetrdf.releasetype" value="beta" />
  <property name="dotnetrdf.toolsversion" value="040" />
  <property name="dotnetrdf.toolsreleasetype" value="beta" />
  <property name="dotnetrdf.nuspecversion" value="0.5.1" />

  <!-- Note that FTP credentials are not included in the file for obvious reasons -->
  <!-- If you want to use the upload targets then use the command line -d option to set these appropriately -->
  <property name="dotnetrdf.webserver" value="" />
  <property name="dotnetrdf.webserver.username" value="" />
  <property name="dotnetrdf.webserver.password" value="" />
  <connection id="dotNetRDFWebsite" server="${dotnetrdf.webserver}" username="${dotnetrdf.webserver.username}" password="${dotnetrdf.webserver.password}" />
  
  <!-- Names of ZIP Files generated by dist targets -->
  <property name="dotnetrdf.nightlyzip" value="dotNetRDF_library_nightly.zip" />
  <property name="dotnetrdf.libzip" value="dotNetRDF_library_${dotnetrdf.version}_${dotnetrdf.releasetype}.zip" />
  <property name="dotnetrdf.srczip" value="dotNetRDF_library_source_${dotnetrdf.version}_${dotnetrdf.releasetype}.zip" />
  <property name="dotnetrdf.toolkitzip" value="dotNetRDF_tools_${dotnetrdf.toolsversion}_${dotnetrdf.toolsreleasetype}.zip" />
  
  <!-- Project Generation Targets which generate some Project Files from others -->

  <target name="projectgen-silverlight" description="Generates the dotNetRDF Silverlight build project file" depends="compile-buildtools" unless="${dotnetrdf.nosilverlight == 'true' or dotnetrdf.nocompile == 'true'}">
    <!-- This exec task syncs the Silverlight project file with the Core Library -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj.template" />
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
    </exec>    
  </target>

  <target name="projectgen-windowsphone" description="Generates the dotNetRDF Windows Phone build project file" depends="projectgen-silverlight" unless="${dotnetrdf.nowindowsphone == 'true' or dotnetrdf.nocompile == 'true'}">
    <!-- This exec task syncs the Windows Phone project file with the Core Library -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj.template" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj.temp" />
    </exec>
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj.temp" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj" />
      <arg value="..\core.silverlight\" />
    </exec>
  </target>

  <target name="projectgen-clientprofile" description="Generates the dotNetRDF Client Profile build project file" depends="projectgen-silverlight" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Client Profile project file with the Core Library and Silverlight (for the System.Web compatability stuff) -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj.template" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj.temp" />
    </exec>
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj.temp" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj" />
      <arg value="..\core.silverlight\" />
    </exec>
  </target>

  <target name="projectgen-lite" description="Generates the dotNetRDF Lite build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Lite project file with the Core Library -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.lite/dotNetRDF.Lite.csproj.template" />
      <arg value="Libraries/core.lite/dotNetRDF.Lite.csproj" />
    </exec>
  </target>
  
  <!-- Compile Targets which Compile the Code -->

  <target name="no-compile" description="Sets that no compilation should be done">
    <property name="dotnetrdf.nocompile" value="true" />
  </target>

  <target name="compile" description="Compile the dotNetRDF Solution and all platform specific builds" unless="${dotnetrdf.nocompile}" depends="compile-solution,compile-silverlight,compile-lite,compile-mono,compile-windowsphone,compile-clientprofile,compile-data-sql,compile-data-virtuoso,compile-query-fulltext">

  </target>

  <target name="compile-nightly" description="Compiles just the dotNetRDF Core Library" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-lite" description="Compiles the dotNetRDF Lite Build" unless="${dotnetrdf.nocompile}" depends="projectgen-lite">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.lite/dotNetRDF.Lite.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-mono" description="Compile the dotNetRDF Mono Build" unless="${dotnetrdf.nocompile}" depends="compile-nightly">
    <property name="nant.settings.currentframework" value="mono-3.5" />
    <setenv>
      <variable name="PATH">
        <path>
          <pathelement path="%PATH%" />
          <pathelement path="${path::get-directory-name(framework::get-tool-path('gmcs'))}" />
        </path>
      </variable>
    </setenv>
    <exec program="Build/nant/mono-compile.bat">
      
    </exec>
    <copy file="Libraries/core/bin/Debug/dotNetRDF.xml" tofile="Libraries/core/bin/Debug/dotNetRDF.Mono.xml" />
  </target>

  <target name="compile-solution" description="Compile the whole dotNetRDF Solution" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="dotNetRDF.sln" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-silverlight" description="Compile the dotNetRDF Silverlight Build"  unless="${dotnetrdf.nocompile}" depends="projectgen-silverlight">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-windowsphone" description="Compile the dotNetRDF Windows Phone Build"  unless="${dotnetrdf.nocompile == 'true' or dotnetrdf.nowindowsphone == 'true'}" depends="projectgen-windowsphone">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <property name="msBuild.exe" value="${string::replace(msBuild.exe,'Framework64','Framework')}" if="${string::contains(msBuild.exe, 'Framework64')}" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-buildtools" description="Compiles Build Tools needed by the compile and build process" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Build/ExportCoreContentsToTemplate/ExportCoreContentsToTemplate.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-linq" description="Compiles dotNetRDF.Linq which is the dotNetRDF port of LinqToRdf" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/linq/dotNetRDF.Linq.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
    </exec>
  </target>

  <target name="compile-clientprofile" description="Compiles the dotNetRDF Client Profile Build" unless="${dotnetrdf.nocompile}" depends="projectgen-clientprofile">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-data-sql" description="Compiles the dotNetRDF Data.Sql Library" unless="${dotnetrdf.nocompile}" depends="compile-nightly">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/data.sql/dotNetRDF.Data.Sql.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-data-virtuoso" description="Compiles the dotNetRDF Data.Virtuoso Library" unless="${dotnetrdf.nocompile}" depends="compile-nightly">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/data.virtuoso/dotNetRDF.Data.Virtuoso.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-query-fulltext" description="Complies the dotNetRDF Query.FullText Library" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/query.fulltext/dotNetRDF.Query.FullText.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>
  
  <!-- Build Targets which Compile the Code and copy the output to the root bin/ directory of the repository -->

  <target name="no-build" description="Sets that no Builds should be performed" depends="no-compile">
    <property name="dotnetrdf.nobuild" value="true" />
  </target>
  
  <target name="build" description="Build dotNetRDF Core and associated library (does not update the stable build in the bin directory, use build-release for that)" unless="${dotnetrdf.nobuild}" depends="build-nightly,build-silverlight,build-lite,build-mono,build-linq,build-clientprofile,build-windowsphone,build-data-sql,build-data-virtuoso,build-query-fulltext">
    
  </target>
  
  <target name="build-nightly" description="Copy the latest build to the Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-nightly">
    <copy overwrite="true" todir="../bin/nightly" file="Libraries/core/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="../bin/nightly" file="Libraries/core/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="../bin/nightly" file="Libraries/core/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/nightly" file="Libraries/core/bin/Debug/Newtonsoft.Json.Net35.dll" />
    <copy overwrite="true" todir="../bin/nightly" file="Libraries/core/bin/Debug/MySql.Data.dll" />
    <copy overwrite="true" todir="../bin/nightly" file="Libraries/core/ChangeLog.txt" />
  </target>

  <target name="build-silverlight" description="Copy the latest Silverlight build to the Silverlight Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-silverlight">
    <copy overwrite="true" todir="../bin/silverlight-nightly" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.Silverlight.dll" />
    <copy overwrite="true" todir="../bin/silverlight-nightly" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.Silverlight.xml" />
    <copy overwrite="true" todir="../bin/silverlight-nightly" file="Libraries/core.silverlight/bin/Debug/HtmlAgilityPack.Silverlight.dll" />
    <copy overwrite="true" todir="../bin/silverlight-nightly" file="Libraries/core.silverlight/bin/Debug/Newtonsoft.Json.Silverlight.dll" />
  </target>

  <target name="build-windowsphone" description="Copy the latest Windows Phone build to the Windows Phone Nightly Build directory" unless="${dotnetrdf.nobuild}" if="${dotnetrdf.nowindowsphone != 'true'}"  depends="compile-windowsphone">
    <copy overwrite="true" todir="../bin/windowsphone-nightly" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.WindowsPhone.dll" />
    <copy overwrite="true" todir="../bin/windowsphone-nightly" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.WindowsPhone.xml" />
    <copy overwrite="true" todir="../bin/windowsphone-nightly" file="Libraries/core.windowsphone/bin/Debug/HtmlAgilityPack.WindowsPhone.dll" />
    <copy overwrite="true" todir="../bin/windowsphone-nightly" file="Libraries/core.windowsphone/bin/Debug/Newtonsoft.Json.WindowsPhone.dll" />
  </target>

  <target name="build-lite" description="Copy the latest Lite build to the Lite Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-lite">
    <copy overwrite="true" todir="../bin/lite-nightly" file="Libraries/core.lite/bin/Debug/dotNetRDF.Lite.dll" />
    <copy overwrite="true" todir="../bin/lite-nightly" file="Libraries/core.lite/bin/Debug/dotNetRDF.Lite.xml" />
    <copy overwrite="true" todir="../bin/lite-nightly" file="Libraries/core.lite/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/lite-nightly" file="Libraries/core.lite/bin/Debug/Newtonsoft.Json.Net35.dll" />
  </target>

  <target name="build-clientprofile" description="Copy the latest Client Profile build to the Client Profile Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-clientprofile">
    <copy overwrite="true" todir="../bin/clientprofile-nightly" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.ClientProfile.dll" />
    <copy overwrite="true" todir="../bin/clientprofile-nightly" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.ClientProfile.xml" />
    <copy overwrite="true" todir="../bin/clientprofile-nightly" file="Libraries/core.clientprofile/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/clientprofile-nightly" file="Libraries/core.clientprofile/bin/Debug/Newtonsoft.Json.Net35.dll" />
  </target>

  <target name="build-mono" description="Copy the latest Mono build to the Mono Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-mono">
    <copy overwrite="true" todir="../bin/mono-nightly" file="Libraries/core/bin/Debug/dotNetRDF.Mono.dll" />
    <copy overwrite="true" todir="../bin/mono-nightly" file="Libraries/core/bin/Debug/dotNetRDF.Mono.xml" />
    <copy overwrite="true" todir="../bin/mono-nightly" file="Libraries/core/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/mono-nightly" file="Libraries/core/bin/Debug/Newtonsoft.Json.Net35.dll" />
    <copy overwrite="true" todir="../bin/mono-nightly" file="Libraries/core/bin/Debug/MySql.Data.dll" />
  </target>

  <target name="build-linq" description="Copy the latest Linq build to the Linq Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-linq">
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/dotNetRDF.Linq.dll" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/dotNetRDF.Linq.xml" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/log4net.dll" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/linq/bin/Debug/Newtonsoft.Json.Net35.dll" />
    <copy overwrite="true" todir="../bin/linq-nightly" file="Libraries/core/bin/Debug/MySql.Data.dll" />
  </target>

  <target name="build-data-sql" description="Copy the latest Data.Sql build to the Data.Sql nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-data-sql">
    <copy overwrite="true" todir="../bin/data-sql-nightly" file="Libraries/data.sql/bin/Debug/dotNetRDF.Data.Sql.dll" />
    <copy overwrite="true" todir="../bin/data-sql-nightly" file="Libraries/data.sql/bin/Debug/dotNetRDF.Data.Sql.xml" />
  </target>

  <target name="build-data-virtuoso" description="Copy the latest Data.Virtuoso build to the Data.Virtuoso nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-data-virtuoso">
    <copy overwrite="true" todir="../bin/data-virtuoso-nightly" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="../bin/data-virtuoso-nightly" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="../bin/data-virtuoso-nightly" file="Libraries/data.virtuoso/bin/Debug/OpenLink.Data.Virtuoso.dll" />
  </target>

  <target name="build-query-fulltext" description="Copy the latest Query.FullText build to the Query.FullText nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-query-fulltext">
    <copy overwrite="true" todir="../bin/query-fulltext-nightly" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="../bin/query-fulltext-nightly" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="../bin/query-fulltext-nightly" file="Libraries/query.fulltext/bin/Debug/Lucene.Net.dll" />
  </target>

  <target name="build-release" description="Copy the stable build to the Stable Build directory ready for a release" unless="${dotnetrdf.nobuild}"  depends="compile">
    <!-- Documentation -->
    <copy overwrite="true" todir="../bin/stable/" file="../Acknowledgments.txt" />
    <copy overwrite="true" todir="../bin/stable/" file="Libraries/core/ChangeLog.txt" />
    <copy overwrite="true" todir="../bin/stable/" file="Libraries/core/ReleaseNotes.txt" />
    <copy overwrite="true" todir="../bin/stable/" file="Libraries/core/Readme.txt" />
    <!-- Core .Net 3.5 Build -->
    <copy overwrite="true" todir="../bin/stable/Core/net35/" file="Libraries/core/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/net35/" file="Libraries/core/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="../bin/stable/Core/net35/" file="Libraries/core/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/net35/" file="Libraries/core/bin/Debug/Newtonsoft.Json.Net35.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/net35/" file="Libraries/core/bin/Debug/MySql.Data.dll" />
    <!-- Core .Net 3.5 Client Profile Build -->
    <copy overwrite="true" todir="../bin/stable/Core/net35-client/" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.ClientProfile.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/net35-client/" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.ClientProfile.xml" />
    <copy overwrite="true" todir="../bin/stable/Core/net35-client/" file="Libraries/core.clientprofile/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/net35-client/" file="Libraries/core.clientprofile/bin/Debug/Newtonsoft.Json.Net35.dll" />
    <!-- Core Silverlight 4.0 Build -->
    <copy overwrite="true" todir="../bin/stable/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.Silverlight.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.Silverlight.xml" />
    <copy overwrite="true" todir="../bin/stable/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/HtmlAgilityPack.Silverlight.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/Newtonsoft.Json.Silverlight.dll" />
    <!-- Core Silverlight 4.0 Build for Windows Phone 7 Build -->
    <copy overwrite="true" todir="../bin/stable/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.WindowsPhone.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.WindowsPhone.xml" />
    <copy overwrite="true" todir="../bin/stable/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/HtmlAgilityPack.WindowsPhone.dll" />
    <copy overwrite="true" todir="../bin/stable/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/Newtonsoft.Json.WindowsPhone.dll" />
    <!-- Data.Sql Build -->
    <copy overwrite="true" todir="../bin/stable/Data/Sql/net35/" file="Libraries/data.sql/bin/Debug/dotNetRDF.Data.Sql.dll" />
    <copy overwrite="true" todir="../bin/stable/Data/Sql/net35/" file="Libraries/data.sql/bin/Debug/dotNetRDF.Data.Sql.xml" />
    <!-- Data.Virtuoso Build -->
    <copy overwrite="true" todir="../bin/stable/Data/Virtuoso/net35/" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="../bin/stable/Data/Virtuoso/net35/" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="../bin/stable/Data/Virtuoso/net35/" file="Libraries/data.virtuoso/bin/Debug/OpenLink.Data.Virtuoso.dll" />
    <!-- Query.FullText Build -->
    <copy overwrite="true" todir="../bin/stable/Query/FullText/net35/" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="../bin/stable/Query/FullText/net35/" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="../bin/stable/Query/FullText/net35/" file="Libraries/query.fulltext/bin/Debug/Lucene.Net.dll" />
  </target>
  
  <!-- Clean Targets for Cleaning the Builds -->

  <target name="clean" description="Cleans all Builds (except Release)" depends="clean-solution">
    
  </target>

  <target name="clean-solution" description="Clean the Solution" depends="clean-nightly,clean-silverlight,clean-lite,clean-mono">
    <delete dir="Libraries/interop.intellidimension/bin" />
    <delete dir="Libraries/interop.jena/bin" />
    <delete dir="Libraries/interop.semweb/bin" />
    <delete dir="Libraries/interop.sesame/bin" />
    <delete dir="Libraries/linkeddata/bin" />
    <delete dir="Libraries/gui.winforms/bin" />
    <delete dir="Samples/sparqldemo/bin" />
    <delete dir="Samples/virtuoso/bin" />
    <delete dir="Samples/WebDemos/bin" />
    <delete dir="Testing/Compatability/bin" />
    <delete dir="Testing/linq-tests/bin" />
    <delete dir="Testing/sesame-test/bin" />
    <delete dir="Testing/testsuite/bin" />
    <delete dir="Testing/unittest/bin" />
    <delete dir="Utilities/AllegroGraphIndexer/bin" />
    <delete dir="Utilities/bsbm/bin" />
    <delete dir="Utilities/parsergui/bin" />
    <delete dir="Utilities/rdfConvert/bin" />
    <delete dir="Utilities/rdfEditor.Wpf/bin" />
    <delete dir="Utilities/rdfMetal/bin" />
    <delete dir="Utilities/rdfQuery/bin" />
    <delete dir="Utilities/rdfWebDeploy/bin" />
    <delete dir="Utilities/soh/bin" />
    <delete dir="Utilities/SparqlGUI/bin" />
    <delete dir="Utilities/storemanager/bin" />
  </target>

  <target name="clean-nightly" description="Clean existing Nightly Build">
    <delete>
      <fileset basedir="../bin/nightly">
        <include name="*" />
      </fileset>
    </delete>
    <delete dir="Libraries/core/bin" />
  </target>

  <target name="clean-silverlight" description="Clean existing Silverlight Nightly Build">
    <delete>
      <fileset basedir="../bin/silverlight-nightly">
        <include name="*" />
      </fileset>
    </delete>
    <delete dir="Libraries/core.silverlight/bin" />
  </target>

  <target name="clean-windowsphone" description="Clean existing Silverlight Nightly Build">
    <delete>
      <fileset basedir="../bin/windowsphone-nightly">
        <include name="*" />
      </fileset>
    </delete>
    <delete dir="Libraries/core.windowsphone/bin" />
  </target>

  <target name="clean-lite" description="Clean existing Lite Nightly Build">
    <delete>
      <fileset basedir="../bin/lite-nightly">
        <include name="*" />
      </fileset>
    </delete>
    <delete dir="Libraries/core.lite/bin" />
  </target>

  <target name="clean-mono" description="Clean existing Mono Nightly Build">
    <delete>
      <fileset basedir="../bin/mono-nightly">
        <include name="*" />
      </fileset>
    </delete>
  </target>

  <target name="clean-release" description="Clean existing Stable Build">
    <delete>
      <fileset basedir="../bin/stable">
        <include name="*" />
      </fileset>
    </delete>
    <delete dir="Libraries/core/bin" />
  </target>

  <target name="clean-linq" description="Clean existing Linq Nightly Build">
    <delete>
      <fileset basedir="../bin/linq-nightly">
        <include name="*" />
      </fileset>
    </delete>
    <delete dir="Libraries/linq/bin" />
  </target>

  <target name="clean-dist" description="Cleans the Distribution ZIP files" depends="clean-dist-release,clean-dist-nightly,clean-dist-toolkit">

  </target>

  <target name="clean-dist-release" description="Cleans the Release ZIP files">
    <delete file="${dotnetrdf.libzip}" />
    <delete file="${dotnetrdf.srczip}" />
  </target>

  <target name="clean-dist-nightly" description="Cleans the Nightly ZIP files">
    <delete file="${dotnetrdf.nightlyzip}" />
  </target>

  <target name="clean-dist-toolkit" description="Cleans the Toolkit ZIP files">
    <delete file="${dotnetrdf.toolkitzip}" />
  </target>
  
  <!-- Dist Targets for creating the distribution ZIP Files -->

  <target name="dist" description="Creates the Distribution ZIP Files" depends="dist-release,dist-nightly,dist-toolkit,dist-nuget">
    
  </target>

  <target name="dist-release" description="Creates the ZIP files for the Release" depends="build-release">
    <zip zipfile="${dotnetrdf.libzip}" ziplevel="9">
      <fileset basedir="../bin/stable/" failonempty="true">
        <include name="/**/*" />
      </fileset>
    </zip>
    <zip zipfile="${dotnetrdf.srczip}" ziplevel="9"> 
      <fileset failonempty="true">
        <include name="**/*" />
        <exclude name="**/bin/**/*" />
        <exclude name="**/obj/**/*" />
	      <exclude name="**/*.dll" />
        <exclude name="**/*.exe" />
        <exclude name="**/*.pdb" />
        <exclude name="Testing/" />
        <exclude name="TestResults/" />
        <exclude name="Samples/" />
	      <exclude name="*.zip" />
	      <exclude name="Utilities/bsbm/" />
	      <exclude name="Build/ndoc3/doc/" />
	      <exclude name="Build/NuGet/*/lib/**/*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-nightly" description="Creates the Nightly ZIP files" depends="build-nightly">
    <zip zipfile="${dotnetrdf.nightlyzip}" ziplevel="9">
      <fileset basedir="../bin/nightly/" prefix="Core/net35/">
        <include name="*" />
      </fileset>
      <fileset basedir="../bin/silverlight-nightly/" prefix="Core/sl4/">
        <include name="*" />
      </fileset>
      <fileset basedir="../bin/clientprofile-nightly" prefix="Core/net35-client">
        <include name="*" />
      </fileset>
      <fileset basedir="../bin/lite-nightly" prefix="Core/net35-lite/">
        <include name="*" />
      </fileset>
      <fileset basedir="../bin/windowsphone-nightly" prefix="Core/sl4-wp/">
        <include name="*" />
      </fileset>
      <fileset basedir="../bin/data-sql-nightly" prefix="Data/Sql/net35/">
        <include name="*" />
      </fileset>
      <fileset basedir="../bin/data-virtuoso-nightly" prefix="Data/Virtuoso/net35/">
        <include name="*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-toolkit" description="Creates the Toolkit ZIP files" depends="build">
    <zip zipfile="${dotnetrdf.toolkitzip}" ziplevel="9" duplicate="Preserve">
      <fileset basedir="Utilities">
        <include name="ReadMe.txt" />
        <include name="../../Acknowlegments.txt" />
        <include name="ChangeLog.txt" />
      </fileset>
      <fileset basedir="Utilities/rdfConvert/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfEditor.Wpf/bin/Debug">
        <include name="**/*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfQuery/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfSqlStorage/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfWebDeploy/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/SparqlGUI/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/storemanager/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/soh/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-nuget" description="Creates the NuGet packages" depends="dist-nuget-core,dist-nuget-data-sql,dist-nuget-data-virtuoso,dist-nuget-query-fulltext">
  </target>

  <target name="dist-nuget-core" description="Creates the Core Library NuGet package" depends="build-release">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net35/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net35-client/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/sl4">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/sl4-wp">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Core library package -->
    <copy todir="Build/nuget/Core/lib/net35/">
      <fileset basedir="../bin/stable/Core/net35/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net35-client/">
      <fileset basedir="../bin/stable/Core/net35-client/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/sl4/">
      <fileset basedir="../bin/stable/Core/sl4/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/sl4-wp/">
      <fileset basedir="../bin/stable/Core/sl4-wp/">
        <include name="*" />
      </fileset>
    </copy>
    <!-- Finally invoke nuget on the package -->
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <target name="dist-nuget-data-sql" description="Creates the Data.Sql NuGet package" depends="build-release">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Data.Sql/lib/net35">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Data.Sql package -->
    <copy todir="Build/nuget/Data.Sql/lib/net35/">
      <fileset basedir="../bin/stable/Data/Sql/net35/">
        <include name="dotNetRDF.Data.Sql.dll" />
        <include name="dotNetRDF.Data.Sql.xml" />
      </fileset>
    </copy>
    <!-- Invoke nuget on the package -->
    <exec workingdir="Build/nuget/Data.Sql/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.Data.Sql.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <target name="dist-nuget-data-virtuoso" description="Creates the Data.Virtuoso NuGet package" depends="build-release">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Data.Virtuoso/lib/net35">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Data.Virtuoso package -->
    <copy todir="Build/nuget/Data.Virtuoso/lib/net35/">
      <fileset basedir="../bin/stable/Data/Virtuoso/net35/">
        <include name="dotNetRDF.Data.Virtuoso.dll" />
        <include name="dotNetRDF.Data.Virtuoso.xml" />
        <include name="OpenLink.Data.Virtuoso.dll" />
      </fileset>
    </copy>
    <!-- Invoke nuget on the package -->
    <exec workingdir="Build/nuget/Data.Virtuoso/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.Data.Virtuoso.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <target name="dist-nuget-query-fulltext" description="Creates the Query.FullText NuGet package" depends="build-release">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Query.FullText/lib/net35">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Query.FullText package -->
    <copy todir="Build/nuget/Query.FullText/lib/net35/">
      <fileset basedir="../bin/stable/Query/FullText/net35/">
        <include name="dotNetRDF.Query.FullText.dll" />
        <include name="dotNetRDF.Query.FullText.xml" />
        <include name="Lucene.Net.dll" />
      </fileset>
    </copy>
    <!-- Invoke nuget on the package -->
    <exec workingdir="Build/nuget/Query.FullText/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.Query.FullText.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>
  
  <!-- Upload Targets for Uploading the Builds to a website -->

  <target name="upload" description="Uploads the Distribution ZIP Files to a website" depends="upload-nightly,upload-release">
    
  </target>

  <target name="upload-nightly" description="Uploads the Nightly ZIPs to a website" depends="dist-nightly" if="${string::get-length(dotnetrdf.webserver) > 0 and string::get-length(dotnetrdf.webserver.username) > 0 and string::get-length(dotnetrdf.webserver.password) > 0}">
    <ftp connection="dotNetRDFWebsite" remotedir="/downloads/" connectmode="PASSIVE" createdirs="false" verbose="true">
      <put type="bin" update="false">
        <include name="/${dotnetrdf.nightlyzip}" />
      </put>
    </ftp>
  </target>

  <target name="upload-release" description="Uploads the Release ZIPs to a website" depends="dist-release">
    <ftp connection="dotNetRDFWebsite" remotedir="/downloads/" connectmode="PASSIVE" createdirs="false" verbose="true">
      <put type="bin" update="false">
        <include name="/${dotnetrdf.libzip}" />
        <include name="/${dotnetrdf.srczip}" />
      </put>
    </ftp>
  </target>

  <target name="upload-toolkit" description="Uploads the Toolkit ZIPs to a website" depends="dist-toolkit">
    <ftp connection="dotNetRDFWebsite" remotedir="/downloads/" connectmode="PASSIVE" createdirs="false" verbose="true">
      <put type="bin" update="false">
        <include name="/${dotnetrdf.toolkitzip}" />
      </put>
    </ftp>
  </target>

  <target name="upload-nuget" description="Uploads the NuGet Packages to the NuGet Gallery" depends="dist-nuget,upload-nuget-core,upload-nuget-data-sql,upload-nuget-data-virtuoso,upload-nuget-query-fulltext">

  </target>

  <target name="upload-nuget-core" description="Uploads the Core Library Package to the NuGet Gallery" depends="dist-nuget-core">
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-data-sql" description="Uploads the Data.Sql Library package to the NuGet Gallery" depends="dist-nuget-data-sql">
    <exec workingdir="Build/nuget/Data.Sql/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Sql.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-data-virtuoso" description="Uploads the Data.Virtuoso Library package to the NuGet Gallery" depends="dist-nuget-data-virtuoso">
    <exec workingdir="Build/nuget/Data.Virtuoso/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Virtuoso.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-query-fulltext" description="Uploads the Query.FullText Library package to the NuGet Gallery" depends="dist-nuget-query-fulltext">
    <exec workingdir="Build/nuget/Query.FullText/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Query.FullText.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-overwrite" description="Uploads the NuGet Packages overwriting an existing package with the same version to the NuGet Gallery" depends="dist-nuget">
    <exec program="nuget.exe">
      <arg value="delete" />
      <arg value="dotNetRDF" />
      <arg value="${dotnetrdf.nuspecversion}" />
      <arg value="-NoPrompt" />
    </exec>
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
    <exec program="nuget.exe">
      <arg value="delete" />
      <arg value="dotNetRDF.Data.Sql" />
      <arg value="${dotnetrdf.nuspecversion}" />
      <arg value="-NoPrompt" />
    </exec>
    <exec workingdir="Build/nuget/Data.Sql/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Sql.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
    <exec program="nuget.exe">
      <arg value="delete" />
      <arg value="dotNetRDF.Data.Virtuoso" />
      <arg value="${dotnetrdf.nuspecversion}" />
      <arg value="-NoPrompt" />
    </exec>
    <exec workingdir="Build/nuget/Data.Virtuoso/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Virtuoso.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>
</project>