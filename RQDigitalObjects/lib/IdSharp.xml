<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdSharp</name>
    </assembly>
    <members>
        <member name="T:IdSharp.Utils.CancelDataEventArgs`1">
            <summary>
            A helper class for providing generic EventArgs data with cancel notification.
            </summary>
            <typeparam name="T">The type of the <see cref="P:IdSharp.Utils.DataEventArgs`1.Data"/> property.</typeparam>
        </member>
        <member name="T:IdSharp.Utils.DataEventArgs`1">
            <summary>
            A helper class for providing generic EventArgs data.
            </summary>
            <typeparam name="T">The type of the <see cref="P:IdSharp.Utils.DataEventArgs`1.Data"/> property.</typeparam>
        </member>
        <member name="M:IdSharp.Utils.DataEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Utils.DataEventArgs`1"/> class.
            </summary>
            <param name="data">The data item to send to event handlers.</param>
        </member>
        <member name="P:IdSharp.Utils.DataEventArgs`1.Data">
            <summary>
            Gets the data value.
            </summary>
            <value>The data value.</value>
        </member>
        <member name="M:IdSharp.Utils.CancelDataEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Utils.DataEventArgs`1"/> class.
            </summary>
            <param name="data">The data item to send to event handlers.</param>
        </member>
        <member name="P:IdSharp.Utils.CancelDataEventArgs`1.Cancel">
            <summary>
            Gets or sets a value indicating whether the action should cancel.
            </summary>
            <value><c>true</c> if the action should cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IdSharp.Utils.CancelDataEventArgs`1.CancelReason">
            <summary>
            Gets or sets the cancel reason.
            </summary>
            <value>The cancel reason.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ITextFrame">
             <summary>
             <para>Text information frame</para>
             <para>From the ID3v2 specification:</para>
             <para>
             The text information frames are the most important frames, containing
             information like artist, album and more. There may only be one text
             information frame of its kind in a tag. If the textstring is
             followed by a termination ($00 (00)) all the following information
             should be ignored and not be displayed. All text frame identifiers
             begin with "T". Only text frame identifiers begin with "T", with the
             exception of the "TXXX" frame. All the text information frames have
             the following format:</para>
            
             <para>[Header for 'Text information frame', ID: "T000" - "TZZZ", excluding "TXXX"]<br />
             Text encoding                $xx<br />
             Information                  [text string according to encoding]</para>
             </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IFrame">
            <summary>
            An arbitrary ID3v2 frame.  This interface is implemented by all frame types.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.Frames.IFrame.GetFrameID(IdSharp.Tagging.ID3v2.ID3v2TagVersion)">
            <summary>
            Gets the FrameID of the frame for a specified tag version.
            </summary>
            <param name="tagVersion">The tag version.</param>
            <returns>The FrameID of the frame for a specified tag version</returns>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.Frames.IFrame.Read(IdSharp.Tagging.ID3v2.TagReadingInfo,System.IO.Stream)">
            <summary>
            Reads the raw data from a specified stream.  The Position property of the stream must be set to the position to begin reading.
            </summary>
            <param name="tagReadingInfo">The reading options.  Includes the version of the ID3v2 tag and how to perform reads.</param>
            <param name="stream">The stream to read from.  The Position property of the stream must be set to the position to begin reading.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.Frames.IFrame.GetBytes(IdSharp.Tagging.ID3v2.ID3v2TagVersion)">
            <summary>
            Gets the bytes of the raw data.
            </summary>
            <returns>The bytes of the raw data.</returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IFrame.FrameHeader">
            <summary>
            Gets the frame header.
            </summary>
            <value>The frame header.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ITextEncoding">
            <summary>
            Interface used by frames that support the TextEncoding property.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ITextEncoding.TextEncoding">
            <summary>
            Gets or sets the text encoding.
            </summary>
            <value>The text encoding.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ITextFrame.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture">
            <summary>
            <para>Attached picture</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>This frame contains a picture directly related to the audio file.
            Image format is the MIME type and subtype [MIME] for the image. In
            the event that the MIME media type name is omitted, "image/" will be
            implied. The "image/png" [PNG] or "image/jpeg" [JFIF] picture format
            should be used when interoperability is wanted. Description is a
            short description of the picture, represented as a terminated
            textstring. The description has a maximum length of 64 characters,
            but may be empty. There may be several pictures attached to one file,
            each in their individual "APIC" frame, but only one with the same
            content descriptor [editor's note: meaning, short description]. There may only be one picture with the picture
            type declared as picture type $01 and $02 respectively. There is the
            possibility to put only a link to the image file by using the 'MIME
            type' "-->" and having a complete URL [URL] instead of picture data.
            The use of linked files should however be used sparingly since there
            is the risk of separation of files.</para>
            
                 <para>[Header for 'Attached picture', ID: "APIC"]<br />
                 Text encoding      $xx<br />
                 MIME type          [text string] $00<br />
                 Picture type       $xx<br />
                 Description        [text string according to encoding] $00 (00)<br />
                 Picture data       [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.MimeType">
            <summary>
            <para>Gets or sets the MIME type and subtype for the image.  In
            the event that the MIME media type name is omitted, "image/" will be
            implied. The "image/png" [PNG] or "image/jpeg" [JFIF] picture format
            should be used when interoperability is wanted.</para><para>Additionally, there is the
            possibility to put only a link to the image file by using the 'MIME
            type' "--&gt;" and having a complete URL [URL] instead of picture data.
            The use of linked files should however be used sparingly since there
            is the risk of separation of files.</para>
            </summary>
            <value>The MIME type and subtype, or "--&gt;" if a URL is contained in the 
            <see cref="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.PictureData"/> property.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.PictureType">
            <summary>
            Gets or sets the type of the picture.  There may only be one picture with the picture type
            <see cref="F:IdSharp.Tagging.ID3v2.PictureType.FileIcon32x32Png"/> and <see cref="F:IdSharp.Tagging.ID3v2.PictureType.OtherFileIcon"/>.
            </summary>
            <value>The type of the picture.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.Description">
            <summary>
            Gets or sets a short description of the picture.  This description must be unique
            within the tag.  The maximum length for this field is 
            64 characters, but may be blank.  Note that if the original tag has a description longer than
            64 characters it will be returned as it was originally stored in the tag, and written back with
            all original characters in tact (that is, possibly with more than 64 characters).
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.PictureData">
            <summary>
            Gets or sets the raw picture data, or URL.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>A copy of the raw picture data, or URL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.Picture">
            <summary>
            Gets or sets the picture.
            </summary>
            <value>The picture.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture.PictureExtension">
            <summary>
            Gets the picture extension.
            </summary>
            <value>The picture extension.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IPositionSynchronization">
            <summary>
            <para>Position synchronization frame</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               This frame delivers information to the listener of how far into the
               audio stream he picked up; in effect, it states the time offset of
               the first frame in the stream. The frame layout is:</para>
            
                 <para>[Head for 'Position synchronization', ID: "POSS"]<br />
                 Time stamp format         $xx<br />
                 Position                  $xx (xx ...)</para>
            
               <para>Where time stamp format is:</para>
            
                 <para>$01  Absolute time, 32 bit sized, using MPEG frames as unit
                 $02  Absolute time, 32 bit sized, using milliseconds as unit</para>
            
               <para>and position is where in the audio the listener starts to receive,
               i.e. the beginning of the next frame. If this frame is used in the
               beginning of a file the value is always 0. There may only be one
               "POSS" frame in each tag.</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPositionSynchronization.TimestampFormat">
            <summary>
            Gets or sets the time stamp format.
            </summary>
            <value>The time stamp format.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPositionSynchronization.Position">
            <summary>
            Gets or sets the position in milliseconds or frames.  See <see cref="P:IdSharp.Tagging.ID3v2.Frames.IPositionSynchronization.TimestampFormat"/>.
            </summary>
            <value>The position in milliseconds or frames.  See <see cref="P:IdSharp.Tagging.ID3v2.Frames.IPositionSynchronization.TimestampFormat"/>.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ITermsOfUse">
            <summary>
            <para>Terms of use frame</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>This frame contains a brief description of the terms of use and
               ownership of the file. More detailed information concerning the legal
               terms might be available through the "WCOP" frame. Newlines are
               allowed in the text. There may only be one "USER" frame in a tag.</para>
            
                 <para>[Header for 'Terms of use frame', ID: "USER"]<br />
                 Text encoding        $xx<br />
                 Language             $xx xx xx<br />
                 The actual text      [text string according to encoding]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ITermsOfUse.LanguageCode">
            <summary>
            Gets or sets the ISO-639-2 language code.
            </summary>
            <value>The ISO-639-2 language code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ITermsOfUse.Value">
            <summary>
            Gets or sets the terms of use/ownership information.  Newlines are allowed.
            </summary>
            <value>The terms of use/ownership information.  Newlines are allowed.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.IEventTimingItem">
            <summary>
            Event timing item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IEventTiming"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IEventTimingItem.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>The type of the event.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IEventTimingItem.Timestamp">
            <summary>
            Gets or sets the timestamp in milliseconds or frames according to <see cref="P:IdSharp.Tagging.ID3v2.Frames.IEventTiming.TimestampFormat"/>.
            </summary>
            <value>The timestamp in milliseconds or frames according to <see cref="P:IdSharp.Tagging.ID3v2.Frames.IEventTiming.TimestampFormat"/>.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader">
            <summary>
            An ID3v2 extended tag header.  Only valid in ID3v2.3 and higher.  However, the <see cref="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.PaddingSize"/>
            property should be used if you wish to explicitly set the padding size in any version, including ID3v2.2.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.ReadFrom(IdSharp.Tagging.ID3v2.TagReadingInfo,System.IO.Stream)">
            <summary>
            Reads the raw data from a specified stream.  The Position property of the stream must be set to the position to begin reading.
            </summary>
            <param name="tagReadingInfo">The reading options.  Includes the version of the ID3v2 tag and how to perform reads.</param>
            <param name="stream">The stream to read from.  The Position property of the stream must be set to the position to begin reading.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.GetBytes(IdSharp.Tagging.ID3v2.ID3v2TagVersion)">
            <summary>
            Gets the bytes of the raw data.
            </summary>
            <returns>The bytes of the raw data.</returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.SizeExcludingSizeBytes">
            <summary>
            The size of the extended header, excluding the bytes used to represent the size of the extended header.
            </summary>
            <value>The size of the extended header, excluding the bytes used to represent the size of the extended header.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.SizeIncludingSizeBytes">
            <summary>
            The size of the extended header, including the bytes used to represent the size of the extended header.
            </summary>
            <value>The size of the extended header, including the bytes used to represent the size of the extended header.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.IsCRCDataPresent">
            <summary>
            Gets or sets whether CRC-32 data is present in the extended header.
            </summary>
            <value><c>true</c> if CRC-32 data is present; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.PaddingSize">
            <summary>
            Gets or sets the size of the padding.  
            This property should be used to explicitly set the padding size for all tag versions, whether or not
            an extended header is to be written in the tag.
            Note: the padding size itself is only (potentially) stored in ID3v2.3 tags.  TODO: Should this
            value reflect actual padding size, or the stored padding size?
            </summary>
            <value>The size of the padding.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.CRC32">
            <summary>
            Gets the CRC.  In ID3v2.3, the CRC is calculated before
            unsynchronization on the data between the extended header and the
            padding, i.e. the frames and only the frames.  In ID3v2.4, the padding
            is included in the CRC calculation.
            If <see cref="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.IsCRCDataPresent"/> is <c>false</c>, this value has no meaning.
            </summary>
            <value>The calculated CRC-32 value.  If <see cref="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.IsCRCDataPresent"/> is <c>false</c>, this value has no meaning.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.IsTagAnUpdate">
            <summary>
            Gets or sets a value indicating whether the present tag is an update of a tag found
            earlier in the present file or stream.  Only valid in ID3v2.4.
            </summary>
            <value>
            <c>true</c> if the present tag is an update of a tag found earlier in the present file or stream; otherwise, <c>false</c>.
            Only valid in ID3v2.4.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.IsTagRestricted">
            <summary>
            Gets or sets a value indicating whether this tag was restricted when it was written.
            Only valid in ID3v2.4.
            </summary>
            <value>
            <c>true</c> if this tag was restricted when it was written.; otherwise, <c>false</c>.
            Only valid in ID3v2.4.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.TagRestrictions">
            <summary>
            Gets the tag restrictions.
            Only valid in ID3v2.4.
            </summary>
            <value>The tag restrictions.  Only valid in ID3v2.4.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TagReadingInfo">
            <summary>
            Specifies version and options for reading ID3 tags.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.TagReadingInfo.#ctor(IdSharp.Tagging.ID3v2.ID3v2TagVersion,IdSharp.Tagging.ID3v2.TagVersionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Tagging.ID3v2.TagReadingInfo"/> class.
            </summary>
            <param name="tagVersion">The tag version.</param>
            <param name="tagVersionOptions">The tag version options.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.TagReadingInfo.#ctor(IdSharp.Tagging.ID3v2.ID3v2TagVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Tagging.ID3v2.TagReadingInfo"/> class.
            </summary>
            <param name="tagVersion">The tag version.</param>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.TagReadingInfo.TagVersion">
            <summary>
            Tag version.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.TagReadingInfo.TagVersionOptions">
            <summary>
            Tag version options.  Designates special directions for reading frames.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.LanguageHelper">
            <summary>
            Static helper class for ISO-639-2 languages.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.LanguageHelper.Languages">
            <summary>
            Gets a dictionary containing 3-letter ISO-639-2 language codes as the key and the English version of the language name as the value.
            </summary>
            <value>A dictionary containing 3-letter ISO-639-2 language codes as the key and the English version of the language name as the value.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.LanguageHelper.SortedLanguages">
            <summary>
            Gets a string array of the English version of the language names sorted alphabetically.
            </summary>
            <value>A string array of the English version of the language names sorted alphabetically.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IUnsynchronizedText">
            <summary>
            <para>Unsynchronized lyrics/text transcription</para>
            <para>From the ID3v2 specification:</para>
            <para>
            This frame contains the lyrics of the song or a text transcription of
            other vocal activities. The head includes an encoding descriptor and
            a content descriptor. The body consists of the actual text. The
            'Content descriptor' is a terminated string. If no descriptor is
            entered, 'Content descriptor' is $00 (00) only. Newline characters
            are allowed in the text. There may be more than one 'Unsynchronized
            lyrics/text transcription' frame in each tag, but only one with the
            same language and content descriptor.
            </para><para>
                [Header for 'Unsynchronized lyrics/text transcription', ID: "USLT"]<br />
                Text encoding        $xx<br />
                Language             $xx xx xx<br />
                Content descriptor   [text string according to encoding] $00 (00)<br />
                Lyrics/text          [full text string according to encoding]
            </para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IUnsynchronizedText.LanguageCode">
            <summary>
            Gets or sets the ISO-639-2 language code.
            </summary>
            <value>The ISO-639-2 language code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IUnsynchronizedText.ContentDescriptor">
            <summary>
            Gets or sets the content descriptor.
            </summary>
            <value>The content descriptor.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IUnsynchronizedText.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ITXXXFrame">
            <summary>
            <para>User defined text information frame</para>
            <para>From the ID3v2 specification:</para>
            <para>
               This frame is intended for one-string text information concerning the
               audiofile in a similar way to the other "T"-frames. The frame body
               consists of a description of the string, represented as a terminated
               string, followed by the actual string. There may be more than one
               "TXXX" frame in each tag, but only one with the same description.
            </para><para>
                 [Header for 'User defined text information frame', ID: "TXXX"]<br />
                 Text encoding     $xx<br />
                 Description       [text string according to encoding] $00 (00)<br />
                 Value             [text string according to encoding]
            </para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ITXXXFrame.Description">
            <summary>
            Gets or sets the user-defined text frame description.
            </summary>
            <value>The user-defined text frame description.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.IMusicianCreditsItem">
            <summary>
            Musician credits item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IMusicianCreditsList"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IMusicianCreditsItem.Instrument">
            <summary>
            Gets or sets the instrument.
            </summary>
            <value>The instrument.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IMusicianCreditsItem.Artists">
            <summary>
            Gets or sets the artists.
            </summary>
            <value>The artists.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes">
            <summary>
            <para>Synchronized tempo codes</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>For a more accurate description of the tempo of a musical piece this
               frame might be used. After the header follows one byte describing
               which time stamp format should be used. Then follows one or more
               tempo codes. Each tempo code consists of one tempo part and one time
               part. The tempo is in BPM described with one or two bytes. If the
               first byte has the value $FF, one more byte follows, which is added
               to the first giving a range from 2 - 510 BPM, since $00 and $01 is
               reserved. $00 is used to describe a beat-free time period, which is
               not the same as a music-free time period. $01 is used to indicate one
               single beat-stroke followed by a beat-free period.</para>
            
               <para>The tempo descriptor is followed by a time stamp. Every time the
               tempo in the music changes, a tempo descriptor may indicate this for
               the player. All tempo descriptors should be sorted in chronological
               order. The first beat-stroke in a time-period is at the same time as
               the beat description occurs. There may only be one "SYTC" frame in
               each tag.</para>
            
                 <para>[Header for 'synchronized tempo codes', ID: "SYTC"]<br />
                 Time stamp format   $xx<br />
                 Tempo data          [binary data]</para>
            
               <para>Where time stamp format is:</para>
            
                 <para>$01  Absolute time, 32 bit sized, using MPEG frames as unit<br />
                 $02  Absolute time, 32 bit sized, using milliseconds as unit</para>
            
               <para>Abolute time means that every stamp contains the time from the
               beginning of the file.</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes.TimestampFormat">
            <summary>
            Gets or sets the time stamp format.
            </summary>
            <value>The time stamp format.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes.Items">
            <summary>
            Gets the BindingList of tempo data items.
            </summary>
            <value>The BindingList of tempo data items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IEventTiming">
             <summary>
             <para>Event timing codes</para>
            
               <para>This frame allows synchronization with key events in a song or sound.</para>
             </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEventTiming.TimestampFormat">
            <summary>
            Gets or sets the time stamp format.
            </summary>
            <value>The time stamp format.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEventTiming.Items">
            <summary>
            Gets the BindingList of <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IEventTimingItem"/> items.
            </summary>
            <value>The BindingList of <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IEventTimingItem"/> items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ISignature">
            <summary>
            <para>Signature frame</para>
            <para>
            This frame enables a group of frames, grouped with the 'Group
            identification registration', to be signed. Although signatures can
            reside inside the registration frame, it might be desired to store
            the signature elsewhere, e.g. in watermarks. There may be more than
            one 'signature frame' in a tag, but no two may be identical.
            </para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISignature.GroupSymbol">
            <summary>
            Gets or sets the group symbol.  Related to Group Identification Registration.
            </summary>
            <value>The group symbol.  Related to Group Identification Registration.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISignature.SignatureData">
            <summary>
            Gets or sets the signature.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>The signature.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IGeneralEncapsulatedObject">
            <summary>
            <para>General encapsulated object</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               In this frame any type of file can be encapsulated. After the header,
               'Frame size' and 'Encoding' follows 'MIME type' [MIME] represented as
               as a terminated string encoded with ISO 8859-1 [ISO-8859-1]. The
               filename is case sensitive and is encoded as 'Encoding'. Then follows
               a content description as terminated string, encoded as 'Encoding'.
               The last thing in the frame is the actual object. The first two
               strings may be omitted, leaving only their terminations. MIME type is
               always an ISO-8859-1 text string. There may be more than one "GEOB"
               frame in each tag, but only one with the same content descriptor.
            </para>
                 <para>[Header for 'General encapsulated object', ID: "GEOB"]<br />
                 Text encoding          $xx<br />
                 MIME type              [text string] $00<br />
                 FileName               [text string according to encoding] $00 (00)<br />
                 Content description    [text string according to encóding] $00 (00)<br />
                 Encapsulated object    [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGeneralEncapsulatedObject.MimeType">
            <summary>
            Gets or sets the MIME type.
            </summary>
            <value>The MIME type.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGeneralEncapsulatedObject.FileName">
            <summary>
            Gets or sets the filename.
            </summary>
            <value>The filename.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGeneralEncapsulatedObject.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGeneralEncapsulatedObject.EncapsulatedObject">
            <summary>
            Gets or sets the encapsulated object.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>A copy of the encapsulated object.</value>
        </member>
        <member name="T:IdSharp.ComInterop.Utils.ICRC32">
            <summary>
            This interface is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.ICRC32.CalculateFromFile(System.String)">
            <summary>
            Returns the CRC32 Checksum of a specified file as a string.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.ICRC32.CalculateFromStream(System.IO.Stream)">
            <summary>
            Returns the CRC32 Checksum of an input stream as a string.
            </summary>
            <param name="stream">Input stream.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.ICRC32.CalculateFromByteArray(System.Byte[])">
            <summary>
            Returns the CRC32 Checksum of a byte array as a string.
            </summary>
            <param name="data">The byte array.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.ICRC32.CalculateInt32FromFile(System.String)">
            <summary>
            Returns the CRC32 Checksum of a specified file as a four byte signed integer (Int32).
            </summary>
            <param name="path">The full path of the file.</param>
            <returns>CRC32 Checksum as a four byte signed integer (Int32).</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.ICRC32.CalculateInt32FromStream(System.IO.Stream)">
            <summary>
            Returns the CRC32 Checksum of an input stream as a four byte unsigned integer (UInt32).
            </summary>
            <param name="stream">The stream.</param>
            <returns>CRC32 Checksum as a four byte unsigned integer (UInt32).</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.ICRC32.CalculateInt32FromByteArray(System.Byte[])">
            <summary>
            Returns the CRC32 Checksum of a byte array as a four byte unsigned integer (UInt32).
            </summary>
            <param name="data">The byte array.</param>
            <returns>CRC32 Checksum as a four byte unsigned integer (UInt32).</returns>
        </member>
        <member name="T:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper">
            <summary>
            This interface is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.CreateID3v2">
            <summary>
            Creates a new ID3v2 object.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.CreateID3v2FromFile(System.String)">
            <summary>
            Creates a new ID3v2 object from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.CreateID3v2FromStream(System.IO.Stream)">
            <summary>
            Creates a new ID3v2 object from a specified path.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.GetTagSizeFromStream(System.IO.Stream)">
            <summary>
            Gets the ID3v2 tag size from a specified stream.  Returns 128 if an ID3v2 tag exists; otherwise, 0.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.GetTagSize(System.String)">
            <summary>
            Gets the ID3v2 tag size from a specified path.  Returns 128 if an ID3v2 tag exists; otherwise, 0.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.DoesTagExistInStream(System.IO.Stream)">
            <summary>
            Returns <c>true</c> if an ID3v2 tag exists in the specified stream; otherwise, <c>false</c>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.DoesTagExist(System.String)">
            <summary>
            Returns <c>true</c> if an ID3v2 tag exists in the specified path; otherwise, <c>false</c>.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.IID3v2Helper.RemoveTag(System.String)">
            <summary>
            Removes an ID3v2 tag from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns><c>true</c> if an ID3v2 tag was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IReverb">
            <summary>
            <para>Reverb</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>Yet another subjective one. You may here adjust echoes of different
               kinds. Reverb left/right is the delay between every bounce in ms.
               Reverb bounces left/right is the number of bounces that should be
               made. $FF equals an infinite number of bounces. Feedback is the
               amount of volume that should be returned to the next echo bounce. $00
               is 0%, $FF is 100%. If this value were $7F, there would be 50% volume
               reduction on the first bounce, 50% of that on the second and so on.
               Left to left means the sound from the left bounce to be played in the
               left speaker, while left to right means sound from the left bounce to
               be played in the right speaker.</para>
            
               <para>'Premix left to right' is the amount of left sound to be mixed in the
               right before any reverb is applied, where $00 is 0% and $FF is 100%.
               'Premix right to left' does the same thing, but right to left.
               Setting both premix to $FF would result in a mono output (if the
               reverb is applied symmetric).</para>
            
               <para>There may only be one "RVRB" frame in each tag.</para>
            
                 <para>[Header for 'Reverb', ID: "RVRB"]<br />
                 Reverb left (ms)                 $xx xx<br />
                 Reverb right (ms)                $xx xx<br />
                 Reverb bounces, left             $xx<br />
                 Reverb bounces, right            $xx<br />
                 Reverb feedback, left to left    $xx<br />
                 Reverb feedback, left to right   $xx<br />
                 Reverb feedback, right to right  $xx<br />
                 Reverb feedback, right to left   $xx<br />
                 Premix left to right             $xx<br />
                 Premix right to left             $xx</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbLeftMilliseconds">
            <summary>
            Gets or sets the delay between each bounce in milliseconds on the left channel.
            </summary>
            <value>The delay between each bounce in milliseconds on the left channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbRightMilliseconds">
            <summary>
            Gets or sets the delay between each bounce in milliseconds on the right channel.
            </summary>
            <value>The delay between each bounce in milliseconds on the right channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbBouncesLeft">
            <summary>
            Gets or sets the number of bounces on the left channel.  0xFF represents an infinite number of bounces.
            </summary>
            <value>The number of bounces on the left channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbBouncesRight">
            <summary>
            Gets or sets the number of bounces on the right channel.  0xFF represents an infinite number of bounces.
            </summary>
            <value>The number of bounces on the right channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbFeedbackLeftToLeft">
            <summary>
            Gets or sets the reverb feedback left to left.  Represents the amount of volume that should be returned on 
            each echo bounce.  For example, 0xFF represents 100%, 0x7F represents 50%, 0x00 represents 0%.
            </summary>
            <value>The reverb feedback left to left.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbFeedbackLeftToRight">
            <summary>
            Gets or sets the reverb feedback left to right.  Represents the amount of volume that should be returned on 
            each echo bounce.  For example, 0xFF represents 100%, 0x7F represents 50%, 0x00 represents 0%.
            </summary>
            <value>The reverb feedback left to right.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbFeedbackRightToRight">
            <summary>
            Gets or sets the reverb feedback right to right.  Represents the amount of volume that should be returned on 
            each echo bounce.  For example, 0xFF represents 100%, 0x7F represents 50%, 0x00 represents 0%.
            </summary>
            <value>The reverb feedback right to right.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.ReverbFeedbackRightToLeft">
            <summary>
            Gets or sets the reverb feedback right to left.  Represents the amount of volume that should be returned on 
            each echo bounce.  For example, 0xFF represents 100%, 0x7F represents 50%, 0x00 represents 0%.
            </summary>
            <value>The reverb feedback right to left.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.PremixLeftToRight">
            <summary>
            Gets or sets the amount of left sound to be mixed in the right before any reverb is applied, where 
            0x00 is 0% and 0xFF is 100%.
            </summary>
            <value>The premix left to right.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IReverb.PremixRightToLeft">
            <summary>
            Gets or sets the amount of right sound to be mixed in the left before any reverb is applied, where 
            0x00 is 0% and 0xFF is 100%.
            </summary>
            <value>The premix left to right.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IGroupIdentification">
            <summary>
            <para>Group identification registration</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>This frame enables grouping of otherwise unrelated frames. This can
               be used when some frames are to be signed. To identify which frames
               belongs to a set of frames a group identifier must be registered in
               the tag with this frame. The 'Owner identifier' is a null-terminated
               string with a URL containing an email address, or a link to a
               location where an email address can be found, that belongs to the
               organisation responsible for this grouping. Questions regarding the
               grouping should be sent to the indicated email address. The 'Group
               symbol' contains a value that associates the frame with this group
               throughout the whole tag. Values below $80 are reserved. The 'Group
               symbol' may optionally be followed by some group specific data, e.g.
               a digital signature. There may be several "GRID" frames in a tag but
               only one containing the same symbol and only one containing the same
               owner identifier. The group symbol must be used somewhere in the tag.
               See section 3.3.1, flag j for more information.</para>
            
                 <para>[Header for 'Group ID registration', ID: "GRID"]<br />
                 Owner identifier      [text string] $00<br />
                 Group symbol          $xx<br />
            	 Group dependent data  [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGroupIdentification.OwnerIdentifier">
            <summary>
            Gets or sets the owner identifier URL.
            </summary>
            <value>The owner identifier URL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGroupIdentification.GroupSymbol">
            <summary>
            Gets or sets the group symbol.
            </summary>
            <value>The group symbol.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IGroupIdentification.GroupDependentData">
            <summary>
            Gets or sets the group dependent data.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>The group dependent data.</value>
        </member>
        <member name="T:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper">
            <summary>
            This interface is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.CreateID3v1">
            <summary>
            Creates a new ID3v1 object.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.CreateID3v1FromFile(System.String)">
            <summary>
            Creates a new ID3v1 object from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.CreateID3v1FromStream(System.IO.Stream)">
            <summary>
            Creates a new ID3v1 object from a specified path.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.GetTagSizeFromStream(System.IO.Stream)">
            <summary>
            Gets the ID3v1 tag size from a specified stream.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.GetTagSize(System.String)">
            <summary>
            Gets the ID3v1 tag size from a specified path.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.DoesTagExistInStream(System.IO.Stream)">
            <summary>
            Returns <c>true</c> if an ID3v1 tag exists in the specified stream; otherwise, <c>false</c>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.DoesTagExist(System.String)">
            <summary>
            Returns <c>true</c> if an ID3v1 tag exists in the specified path; otherwise, <c>false</c>.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IID3v1Helper.RemoveTag(System.String)">
            <summary>
            Removes an ID3v1 tag from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns><c>true</c> if an ID3v1 tag was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper">
            <summary>
            This class is intended for use with clients accessing the assembly through COM.  See <see cref="N:IdSharp.ComInterop"/>.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.CreateID3v1">
            <summary>
            Creates a new ID3v1 object.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.CreateID3v1FromFile(System.String)">
            <summary>
            Creates a new ID3v1 object from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.CreateID3v1FromStream(System.IO.Stream)">
            <summary>
            Creates a new ID3v1 object from a specified path.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.GetTagSizeFromStream(System.IO.Stream)">
            <summary>
            Gets the ID3v1 tag size from a specified stream.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.GetTagSize(System.String)">
            <summary>
            Gets the ID3v1 tag size from a specified path.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.DoesTagExistInStream(System.IO.Stream)">
            <summary>
            Returns <c>true</c> if an ID3v1 tag exists in the specified stream; otherwise, <c>false</c>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.DoesTagExist(System.String)">
            <summary>
            Returns <c>true</c> if an ID3v1 tag exists in the specified path; otherwise, <c>false</c>.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.ID3v1Helper.RemoveTag(System.String)">
            <summary>
            Removes an ID3v1 tag from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns><c>true</c> if an ID3v1 tag was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:zlib.ZOutputStream.TotalIn">
            <summary> Returns the total number of bytes input so far.</summary>
        </member>
        <member name="P:zlib.ZOutputStream.TotalOut">
            <summary> Returns the total number of bytes output so far.</summary>
        </member>
        <member name="T:IdSharp.Utils.IBindableControl">
            <summary>
            Provider and interface for binding to various types of controls.  See <see cref="T:IdSharp.Utils.GenericBinder`1"/>.
            </summary>
        </member>
        <member name="E:IdSharp.Utils.IBindableControl.Validated">
            <summary>
            Occurs when the control has validated.
            </summary>
        </member>
        <member name="P:IdSharp.Utils.IBindableControl.Control">
            <summary>
            Gets the control this object wraps.
            </summary>
            <value>The control this object wraps.</value>
        </member>
        <member name="P:IdSharp.Utils.IBindableControl.Value">
            <summary>
            Gets or sets the value of the control.
            </summary>
            <value>The value of the control.</value>
        </member>
        <member name="P:IdSharp.Utils.IBindableControl.Name">
            <summary>
            Gets the name of the control.
            </summary>
            <value>The name of the control.</value>
        </member>
        <member name="P:IdSharp.Utils.IBindableControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.IFrameHeader">
            <summary>
            ID3v2 frame header.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.FrameSize">
            <summary>
            Gets the size of the frame, excluding the (10 or 6 byte) header, but not excluding additions to the header.
            </summary>
            <value>The size of the frame, excluding the (10 or 6 byte) header, but not excluding additions to the header.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.FrameSizeTotal">
            <summary>
            Gets the total size of the frame, including the (10 or 6 byte) header and additions to the header.
            </summary>
            <value>The total size of the frame, including the (10 or 6 byte) header and additions to the header.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.FrameSizeExcludingAdditions">
            <summary>
            Gets the size of the frame, excluding the header and excluding additions to the header.
            </summary>
            <value>The the size of the frame, excluding the header and excluding additions to the header.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.IsTagAlterPreservation">
            <summary>
            This flag tells the software what to do with this frame if it is
            unknown and the tag is altered in any way. This applies to all
            kinds of alterations, including adding more padding and reordering
            the frames.
            </summary>
            <value>
            	<c>true</c> if tag should be preserved if unknown and any part of the ID3v2 tag is altered; otherwise, <c>false</c>.
            Only valid in ID3v2.3 and higher.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.IsFileAlterPreservation">
            <summary>
            This flag tells the software what to do with this frame if it is
            unknown and the file, excluding the tag, is altered. This does not
            apply when the audio is completely replaced with other audio data.
            </summary>
            <value>
            	<c>true</c> if the tag should be preserved when the audio data is altered (excluding a complete replace); otherwise, <c>false</c>.
            Only valid in ID3v2.3 and higher.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.IsReadOnly">
            <summary>
            Tells the software that the contents of this
            frame is intended to be read only. Changing the contents might
            break something, e.g. a signature. If the contents are changed,
            without knowledge in why the frame was flagged read only and
            without taking the proper means to compensate, e.g. recalculating
            the signature, the bit should be cleared.  Only valid in ID3v2.3 and higher.
            </summary>
            <value><c>true</c> if frame is inteded to be read only; otherwise, <c>false</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.IsCompressed">
            <summary>
            Gets or sets a value indicating whether or not this frame is compressed.
            If true, frame is compressed using "zlib" with 4 bytes for
            'decompressed size' appended to the frame header.  See http://www.zlib.net.  Only valid in ID3v2.3 and higher.
            </summary>
            <value><c>true</c> if compressed; otherwise, <c>false</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.EncryptionMethod">
            <summary>
            This flag indicates whether or not the frame is encrypted. If set
            one byte indicating with which method it was encrypted will be
            appended to the frame header. Only valid in ID3v2.3 and higher.
            </summary>
            <value><c>value</c> if encrypted; otherwise, <c>null</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.GroupingIdentity">
            <summary>
            This flag indicates whether or not this frame belongs in a group
            with other frames. If set a group identifier byte is added to the
            frame header. Every frame with the same group identifier belongs
            to the same group.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>Contains the grouping identity byte if grouping identity is used; otherwise, <c>null</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.DecompressedSize">
            <summary>
            Gets or sets the size of the decompressed frame.  
            Value has no meaning if <see cref="P:IdSharp.Tagging.ID3v2.IFrameHeader.IsCompressed"/> is <c>false</c>.
            This value is set automatically when the frame is written.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>
            The size of the decompressed frame.  Value has no meaning if <see cref="P:IdSharp.Tagging.ID3v2.IFrameHeader.IsCompressed"/> is <c>false</c>.
            Only valid in ID3v2.3 and higher.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameHeader.UsesUnsynchronization">
            <summary>
            Gets or sets a value indicating whether this frame uses unsynchronization.
            Only valid in ID3v2.4.
            </summary>
            <value>
            <c>true</c> if this frame uses unsynchronization; otherwise, <c>false</c>.
            Only valid in ID3v2.4.
            </value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IMusicCDIdentifier">
            <summary>
            <para>Music CD identifier</para>
            
               <para>This frame is intended for music that comes from a CD, so that the CD
               can be identified in databases such as the CDDB [CDDB]. The frame
               consists of a binary dump of the Table Of Contents, TOC, from the CD,
               which is a header of 4 bytes and then 8 bytes/track on the CD plus 8
               bytes for the 'lead out' making a maximum of 804 bytes. The offset to
               the beginning of every track on the CD should be described with a
               four bytes absolute CD-frame address per track, and not with absolute
               time. This frame requires a present and valid "TRCK" frame, even if
               the CD only has one track. There may only be one "MCDI" frame in
               each tag.</para>
            
                 <para>[Header for 'Music CD identifier', ID: "MCDI"]<br />
                 CD TOC                [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IMusicCDIdentifier.TOC">
            <summary>
            <para>CD TOC (Table of Contents) which is a header of 4 bytes and then 8 bytes/track on the CD plus 8
               bytes for the 'lead out' making a maximum of 804 bytes. The offset to
               the beginning of every track on the CD should be described with a
               four bytes absolute CD-frame address per track, and not with absolute
               time.</para>
            <para>Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.</para>
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.IPriceInformation">
            <summary>
            Price information.  Used by <see cref="T:IdSharp.Tagging.ID3v2.Frames.ICommercial"/>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IPriceInformation.CurrencyCode">
            <summary>
            Gets or sets the ISO-4217 currency code.
            </summary>
            <value>The ISO-4217 currency code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IPriceInformation.Price">
            <summary>
            Gets or sets the price in the currency indicated in the CurrencyCode property.
            </summary>
            <value>The price in the currency indicated in the CurrencyCode property.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText">
            <summary>
            <para>Synchronized lyrics/text</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>This is another way of incorporating the words, said or sung lyrics,
               in the audio file as text, this time, however, in sync with the
               audio. It might also be used to describing events e.g. occurring on a
               stage or on the screen in sync with the audio. The header includes a
               content descriptor, represented with as terminated textstring. If no
               descriptor is entered, 'Content descriptor' is $00 (00) only.</para>
            
                 <para>[Header for 'synchronized lyrics/text', ID: "SYLT"]<br />
                 Text encoding        $xx<br />
                 Language             $xx xx xx<br />
                 Time stamp format    $xx<br />
                 Content type         $xx<br />
                 Content descriptor   [text string according to encoding] $00 (00)</para>
            
               <para>Time stamp format is:</para>
            
                 <para>$01  Absolute time, 32 bit sized, using MPEG [MPEG] frames as unit<br />
                 $02  Absolute time, 32 bit sized, using milliseconds as unit</para>
            
               <para>Absolute time means that every stamp contains the time from the
               beginning of the file.</para>
            
               <para>The text that follows the frame header differs from that of the
               unsynchronized lyrics/text transcription in one major way. Each
               syllable (or whatever size of text is considered to be convenient by
               the encoder) is a null terminated string followed by a time stamp
               denoting where in the sound file it belongs. Each sync thus has the
               following structure:</para>
            
                 <para>Terminated text to be synced (typically a syllable)<br />
                 Sync identifier (terminator to above string)   $00 (00)<br />
                 Time stamp                                     $xx (xx ...)</para>
            
               <para>The 'time stamp' is set to zero or the whole sync is omitted if
               located directly at the beginning of the sound. All time stamps
               should be sorted in chronological order. The sync can be considered
               as a validator of the subsequent string.</para>
            
               <para>Newline ($0A) characters are allowed in all "SYLT" frames and should
               be used after every entry (name, event etc.) in a frame with the
               content type $03 - $04.</para>
            
               <para>A few considerations regarding whitespace characters: Whitespace
               separating words should mark the beginning of a new word, thus
               occurring in front of the first syllable of a new word. This is also
               valid for new line characters. A syllable followed by a comma should
               not be broken apart with a sync (both the syllable and the comma
               should be before the sync).</para>
            
               <para>An example: The "USLT" passage</para>
            
                 <para>"Strangers in the night" $0A "Exchanging glances"</para>
            
               <para>would be "SYLT" encoded as:</para>
            
                 <para>"Strang" $00 xx xx "ers" $00 xx xx " in" $00 xx xx " the" $00 xx xx
                 " night" $00 xx xx 0A "Ex" $00 xx xx "chang" $00 xx xx "ing" $00 xx
                 xx "glan" $00 xx xx "ces" $00 xx xx</para>
            
               <para>There may be more than one "SYLT" frame in each tag, but only one
               with the same language and content descriptor.</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.LanguageCode">
            <summary>
            Gets or sets the ISO-639-2 language code.
            </summary>
            <value>The ISO-639-2 language code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.TimestampFormat">
            <summary>
            Gets or sets the time stamp format.
            </summary>
            <value>The time stamp format.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.ContentDescriptor">
            <summary>
            Gets or sets the content descriptor.
            </summary>
            <value>The content descriptor.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.Items">
            <summary>
            Gets the BindingList of synchronized text items.
            </summary>
            <value>The BindingList of synchronized text items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ID3v2Helper">
            <summary>
            Static helper class for ID3v2.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.CreateID3v2">
            <summary>
            Creates a new ID3v2 object.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.CreateID3v2(System.String)">
            <summary>
            Creates a new ID3v2 object from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.CreateID3v2(System.IO.Stream)">
            <summary>
            Creates a new ID3v2 object from a specified path.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.GetTagSize(System.IO.Stream)">
            <summary>
            Gets the ID3v2 tag size from a specified stream.  Returns 0 if no tag exists.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.GetTagSize(System.String)">
            <summary>
            Gets the ID3v2 tag size from a specified path.  Returns 128 if an ID3v2 tag exists; otherwise, 0.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.DoesTagExist(System.IO.Stream)">
            <summary>
            Returns <c>true</c> if an ID3v2 tag exists in the specified stream; otherwise, <c>false</c>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.DoesTagExist(System.String)">
            <summary>
            Returns <c>true</c> if an ID3v2 tag exists in the specified path; otherwise, <c>false</c>.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.ID3v2Helper.RemoveTag(System.String)">
            <summary>
            Removes an ID3v2 tag from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns><c>true</c> if an ID3v2 tag was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:IdSharp.Tagging.ID3v1.GenreHelper">
            <summary>
            Static helper class for ID3v1 Genres.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.GenreHelper.GetGenreIndex(System.String)">
            <summary>
            Gets the index of the genre.  If the genre is not found, 12 is returned to indicate 'Other'.
            </summary>
            <param name="genre">The genre.</param>
            <returns>The index of the genre.  If the genre is not found, 12 is returned to indicate 'Other'.</returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.GenreHelper.GenreByIndex">
            <summary>
            Gets a string array of ID3v1 genres sorted by index.
            </summary>
            <value>A string array of ID3v1 genres sorted by index.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.IFrameContainer">
            <summary>
            Frame container.
            </summary>
        </member>
        <member name="T:IdSharp.Utils.INotifyInvalidData">
            <summary>
            Allows an object to publish information about incorrectly formatted data, which can be treated as either a warning or error.  See <see cref="T:IdSharp.Utils.GenericBinder`1"/>.
            </summary>
        </member>
        <member name="E:IdSharp.Utils.INotifyInvalidData.InvalidData">
            <summary>
            Occurs when a property in the object has been set to an incorrect state.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IFrameContainer.FirePropertyChanged(System.String)">
            <summary>
            Forces the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event to fire.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IFrameContainer.GetFrameList(System.String)">
            <summary>
            Gets the frame list.
            </summary>
            <returns></returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.UniqueFileIdentifierList">
            <summary>
            Gets the list of unique file identifiers.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IUniqueFileIdentifier"/>.  UFID/UFI.
            </summary>
            <value>The list of unique file identifiers.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IUniqueFileIdentifier"/>.  UFID/UFI.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Album">
            <summary>
            Gets or sets the album.  The 'Album/Movie/Show title' frame is intended for the title of the
            recording/source of sound which the audio in the file is taken from.  TALB/TAL.
            </summary>
            <value>The album name.  The 'Album/Movie/Show title' frame is intended for the title of the
            recording/source of sound which the audio in the file is taken from.  TALB/TAL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.BPM">
            <summary>
            Gets or sets the number of beats per minute in the mainpart of the audio.  TBPM/TBP.
            </summary>
            <value>The the number of beats per minute in the mainpart of the audio.  TBPM/TBP.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Composer">
            <summary>
            Gets or sets the composer.  TCOM/TCM.
            </summary>
            <value>The composer.  TCOM/TCM.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Genre">
            <summary>
            Gets or sets the genre.  TCON/TCO.
            </summary>
            <value>The genre.  TCON/TCO.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Copyright">
            <summary>
            Gets or sets the copyright message, which is a string which must begin with a
            year and a space character.  Intended for
            the copyright holder of the original sound, not the audio file
            itself.  TCOP/TCR.
            </summary>
            <value>The copyright message.  TCOP/TCR.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PlaylistDelayMilliseconds">
            <summary>
            Gets or sets the playlist delay in milliseconds.  TDLY/TDY.
            </summary>
            <value>The playlist delay in milliseconds.  TDLY/TDY.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.EncodedByWho">
            <summary>
            Gets or sets the name of the person or organisation that encoded the audio file.  TENC/TEN.
            </summary>
            <value>The name of the person or organisation that encoded the audio file.  TENC/TEN.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Lyricist">
            <summary>
            Gets or sets the lyricist.  TEXT/TXT.  TODO: Add list for predefined types.
            </summary>
            <value>The lyricist.  TEXT/TXT.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.FileType">
            <summary>
            Gets or sets the type of the file.  TFLT/TFT.
            </summary>
            <value>The type of the file.  TFLT/TFT.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.ContentGroup">
            <summary>
            Gets or sets the content group.  The 'Content group description' frame 
            is used if the sound belongs to
            a larger category of sounds/music. For example, classical music is
            often sorted in different musical sections (e.g. "Piano Concerto",
            "Weather - Hurricane"). TIT1/TT1.
            </summary>
            <value>The content group.  The 'Content group description' frame 
            is used if the sound belongs to
            a larger category of sounds/music. For example, classical music is
            often sorted in different musical sections (e.g. "Piano Concerto",
            "Weather - Hurricane").  TIT1/TT1.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Title">
            <summary>
            Gets or sets the title/song name/content description.  TIT2/TT2.
            </summary>
            <value>The title/song name/content description.  TIT2/TT2.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Subtitle">
            <summary>
            Gets or sets the subtitle/description refinement.  TIT3/TT3.
            </summary>
            <value>The subtitle/description refinement.  TIT3/TT3.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.InitialKey">
            <summary>
            Gets or sets the initial key.  Represented as a string with a maximum length of three
            characters.  The ground keys are represented with "A","B","C","D","E",
            "F" and "G" and halfkeys represented with "b" and "#". Minor is
            represented as "m". Example "Cbm". Off key is represented with an "o"
            only.  TKEY/TKE.
            </summary>
            <value>The initial key.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Languages">
            <summary>
            Gets the languages of the text or lyrics in the audio file.  TLAN/TLA.
            </summary>
            <value>The languages of the text or lyrics in the audio file.  TLAN/TLA.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.LengthMilliseconds">
            <summary>
            Gets or sets the length of the audio in milliseconds, as reported by the ID3 tag.  TLEN/TLE.
            </summary>
            <value>The length of the audio in milliseconds, as reported by the ID3 tag.  TLEN/TLE.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.MediaType">
            <summary>
            Gets or sets the type of the media.  TMED/TMT.  TODO: Dictionary/list of predefined types.
            </summary>
            <value>The type of the media.  TMED/TMT.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.OriginalSourceTitle">
            <summary>
            Gets or sets the original album/movie/show/source of sound title.  TOAL/TOT.
            </summary>
            <value>The original album/movie/show/source of sound title.  TOAL/TOT.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.OriginalFileName">
            <summary>
            Gets or sets the original filename.  Contains the preferred filename for the
            file, since some media doesn't allow the desired length of the
            filename. The filename is case sensitive and includes its suffix.  TOFN/TOF.
            </summary>
            <value>
            The original filename.  Contains the preferred filename for the
            file, since some media doesn't allow the desired length of the
            filename. The filename is case sensitive and includes its suffix.  TOFN/TOF.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.OriginalLyricist">
            <summary>
            Gets or sets the original lyricist.  TOLY/TOL.
            </summary>
            <value>The original lyricist.  TOLY/TOL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.OriginalArtist">
            <summary>
            Gets or sets the original artist.  TOPE/TOA.
            </summary>
            <value>The original artist.  TOPE/TOA.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.OriginalReleaseYear">
            <summary>
            Gets or sets the original release year.  TDOR/TORY/TOR.  TODO: New implementation in ID3v2.4.
            </summary>
            <value>The original release year.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.FileOwnerName">
            <summary>
            Gets or sets the name of the file owner.  TOWN.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>The name of the file owner.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Artist">
            <summary>
            Gets or sets the artist.  TPE1/TP1.
            </summary>
            <value>The artist.  TPE1/TP1.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Accompaniment">
            <summary>
            Gets or sets the accompaniment.  TPE2/TP2.
            </summary>
            <value>The accompaniment.  TPE2/TP2.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Conductor">
            <summary>
            Gets or sets the conductor.  TPE3/TP3.
            </summary>
            <value>The conductor.  TPE3/TP3.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.RemixedBy">
            <summary>
            Gets or sets who remixed the audio.  TPE4/TP4.
            </summary>
            <value>Who remixed the audio.  TPE4/TP4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.DiscNumber">
            <summary>
            Gets or sets the disc number.  TPOS/TPA.
            </summary>
            <value>The disc number.  TPOS/TPA.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Publisher">
            <summary>
            Gets or sets the publisher/record label.  TPUB/TPB.
            </summary>
            <value>The publisher/record label.  TPUB/TPB.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.TrackNumber">
            <summary>
            Gets or sets the track number.  TRCK/TRK.
            </summary>
            <value>The track number.  TRCK/TRK.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecordingDates">
            <summary>
            Gets or sets the recording dates.  TRDA/TRD.  TODO: Replaced by TDRC in ID3v2.4.
            </summary>
            <value>The recording dates.  TRDA/TRD.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.InternetRadioStationName">
            <summary>
            Gets or sets the name of the internet radio station.  TRSN.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>The name of the internet radio station.  TRSN.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.InternetRadioStationOwner">
            <summary>
            Gets or sets the internet radio station owner.  TRSO.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>The internet radio station owner.  TRSO.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.FileSizeExcludingTag">
            <summary>
            Gets or sets the file size excluding the ID3v2 tag, as reported by the tag.  TSIZ/TSI.  Only valid in ID3v2.3 and ID3v2.2.
            </summary>
            <value>The file size excluding the ID3v2 tag, as reported by the tag.  TSIZ/TSI.  Only valid in ID3v2.3 and ID3v2.2.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.ISRC">
            <summary>
            Gets or sets the ISRC code.  Value should be 12 characters in length.  TSRC/TRC.
            </summary>
            <value>The ISRC code.  Value should be 12 characters in length.  TSRC/TRC.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.EncoderSettings">
            <summary>
            Gets or sets the software/hardware and settings used for encoding.  TSSE/TSS.
            </summary>
            <value>The encoder settings.  TSSE/TSS.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Year">
            <summary>
            Gets or sets the year.  TYER in ID3v2.3, TYR in ID3v2.2.  Replaced by TDRL and TDRC in ID3v2.4.  Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.ReleaseTimestamp"/> (TDRL).
            </summary>
            <value>The year.  TYER in ID3v2.3, TYR in ID3v2.2.  Replaced by TDRL and TDRC in ID3v2.4.  Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.ReleaseTimestamp"/> (TDRL).</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.DateRecorded">
            <summary>
            Gets or sets the date recorded in MMDD format.  TDAT in ID3v2.3, TDA in ID3v2.2.  Replaced by TDRL and TDRC in ID3v2.4.  Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecordingTimestamp"/> (TDRC).
            </summary>
            <value>The date recorded in MMDD format.  TDAT in ID3v2.3, TRD in ID3v2.2  Replaced by TDRL and TDRC in ID3v2.4.  Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecordingTimestamp"/> (TDRC).</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.TimeRecorded">
            <summary>
            Gets or sets the time recorded in HHMM format.  TIME in ID3v2.3, TIM in ID3v2.2.  Replaced by TDRL and TDRC in ID3v2.4.  Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecordingTimestamp"/> (TDRC).
            </summary>
            <value>The time recorded in HHMM format.  TIME in ID3v2.3, TIM in ID3v2.2.  Replaced by TDRL and TDRC in ID3v2.4.  Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecordingTimestamp"/> (TDRC).</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.ReleaseTimestamp">
            <summary>
            Gets or sets the release timestamp.  TDRL in ID3v2.4.  
            Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.Year"/> (TYER/TYE).
            <para>
            The timestamp fields are based on a subset of ISO-8601. When being as
            precise as possible the format of a time string is
            yyyy-MM-ddTHH:mm:ss (year, "-", month, "-", day, "T", hour (out of
            24), ":", minutes, ":", seconds), but the precision may be reduced by
            removing as many time indicators as wanted. Hence valid timestamps
            are yyyy, yyyy-MM, yyyy-MM-dd, yyyy-MM-ddTHH, yyyy-MM-ddTHH:mm and
            yyyy-MM-ddTHH:mm:ss.
            </para>
            </summary>
            <value>The release timestamp.  TDRL in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.OriginalReleaseTimestamp">
            <summary>
            Gets or sets the original release timestamp.  TDOR in ID3v2.4.  
            Setting this field affects ... TODO
            <para>
            The timestamp fields are based on a subset of ISO-8601. When being as
            precise as possible the format of a time string is
            yyyy-MM-ddTHH:mm:ss (year, "-", month, "-", day, "T", hour (out of
            24), ":", minutes, ":", seconds), but the precision may be reduced by
            removing as many time indicators as wanted. Hence valid timestamps
            are yyyy, yyyy-MM, yyyy-MM-dd, yyyy-MM-ddTHH, yyyy-MM-ddTHH:mm and
            yyyy-MM-ddTHH:mm:ss.
            </para>
            </summary>
            <value>The original release timestamp.  TDOR in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecordingTimestamp">
            <summary>
            Gets or sets the recording timestamp.  TDRC in ID3v2.4.
            Setting this field affects <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.DateRecorded"/> (TDAT/TDA) and <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.TimeRecorded"/> (TIME/TIM). If
            the necessary precision is left off, the forementioned fields are set to null.  The "Year" portion of the RecordingTimestamp
            does not affect any other frames in the tag.
            <para>
            The timestamp fields are based on a subset of ISO-8601. When being as
            precise as possible the format of a time string is
            yyyy-MM-ddTHH:mm:ss (year, "-", month, "-", day, "T", hour (out of
            24), ":", minutes, ":", seconds), but the precision may be reduced by
            removing as many time indicators as wanted. Hence valid timestamps
            are yyyy, yyyy-MM, yyyy-MM-dd, yyyy-MM-ddTHH, yyyy-MM-ddTHH:mm and
            yyyy-MM-ddTHH:mm:ss.
            </para>
            </summary>
            <value>The recording timestamp.  TDRC in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.IsPartOfCompilation">
            <summary>
            Gets or sets whether the track is part of a compilation.  TCMP/TCP.
            <para>Note: This is a non-standard ID3v2 frame that is used by some tag editors, including iTunes.</para>
            </summary>
            <value>
            <c>true</c> if track is part of a compilation set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.UserDefinedText">
            <summary>
            Gets the list of user defined text frames.  TXXX/TXX.
            </summary>
            <value>The list of user defined text frames.  TXXX/TXX.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.CommercialInfoUrlList">
            <summary>
            Gets the list of commercial info URLs.  WCOM/WCM.
            </summary>
            <value>The list of commercial info URLs.  WCOM/WCM.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.CopyrightUrl">
            <summary>
            Gets or sets the copyright URL.  WCOP/WCP.
            </summary>
            <value>The copyright URL.  WCOP/WCP.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.AudioFileUrl">
            <summary>
            Gets or sets the audio file URL.  WOAF/WAF.
            </summary>
            <value>The audio file URL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.ArtistUrlList">
            <summary>
            Gets the list of artist URLs.  WOAR/WAR.
            </summary>
            <value>The list of artist URLs.  WOAR/WAR.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.AudioSourceUrl">
            <summary>
            Gets or sets the audio source URL, e.g. a movie page.  WOAS/WAS.
            </summary>
            <value>The audio source URL, e.g. a movie page.  WOAS/WAS.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.InternetRadioStationUrl">
            <summary>
            Gets or sets the internet radio station URL.  WORS.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>The internet radio station URL.  WORS.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PaymentUrl">
            <summary>
            Gets or sets the payment URL.  WPAY.  Only valid in ID3v2.3 and higher.
            </summary>
            <value>The payment URL.  WPAY.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PublisherUrl">
            <summary>
            Gets or sets the publisher/record label URL.  WPUB/WPB.
            </summary>
            <value>The publisher/record label URL.  WPUB/WPB.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.UserDefinedUrlList">
            <summary>
            Gets the BindingList of user defined URL frames.
            </summary>
            <value>The BindingList of user defined URL frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.InvolvedPersonList">
            <summary>
            Gets the involved persons frame.
            </summary>
            <value>The involved persons frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.MusicCDIdentifier">
            <summary>
            Gets the Music CD Identifier (Table of Contents) frame.
            </summary>
            <value>The Music CD Identifier (Table of Contents) frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.EventTiming">
            <summary>
            Gets the event timing frame.
            </summary>
            <value>The event timing frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.MpegLookupTable">
            <summary>
            Gets the MPEG lookup table frame.
            </summary>
            <value>The MPEG lookup table frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.SynchronizedTempoCodeList">
            <summary>
            Gets the synchronized tempo codes frame.
            </summary>
            <value>The synchronized tempo codes frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.UnsynchronizedLyricsList">
            <summary>
            Gets the BindingList of unsynchronized lyrics frames.
            </summary>
            <value>The BindingList of unsynchronized lyrics frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.SynchronizedLyrics">
            <summary>
            Gets the BindingList of synchronized lyrics frames.
            </summary>
            <value>The BindingList of synchronized lyrics frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.CommentsList">
            <summary>
            Gets the BindingList of comment frames.
            </summary>
            <value>The BindingList of comment frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.RelativeVolumeAdjustmentList">
            <summary>
            Gets the BindingList of relative volume adjustment frames.
            </summary>
            <value>The BindingList of relative volume adjustment frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.EqualizationList">
            <summary>
            Gets the BindingList of equalization frames.
            </summary>
            <value>The BindingList of equalization frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Reverb">
            <summary>
            Gets the reverb frame.
            </summary>
            <value>The reverb frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PictureList">
            <summary>
            Gets the BindingList of attached picture frames.
            </summary>
            <value>The BindingList of attached picture frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.GeneralEncapsulatedObjectList">
            <summary>
            Gets the BindingList of general encapsulated object frames.
            </summary>
            <value>The BindingList of general encapsulated object frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PlayCount">
            <summary>
            Gets or sets the play count.
            </summary>
            <value>The play count.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PopularimeterList">
            <summary>
            Gets the BindingList of popularimeter frames.
            </summary>
            <value>The BindingList of popularimeter frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.RecommendedBufferSize">
            <summary>
            Gets the recommended buffer size frame.
            </summary>
            <value>The recommended buffer size frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.AudioEncryptionList">
            <summary>
            Gets the BindingList of audio encryption frames.
            </summary>
            <value>The BindingList of audio encryption frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.LinkedInformationList">
            <summary>
            Gets the BindingList of linked information frames.
            </summary>
            <value>The BindingList of linked information frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PositionSynchronization">
            <summary>
            Gets the position synchronization frame.
            </summary>
            <value>The position synchronization frame.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.AudioSeekPointIndex">
            <summary>
            Gets the audio seek point index frame.  Only supported in ID3v2.4.
            </summary>
            <value>The index of the audio seek point.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.TermsOfUseList">
            <summary>
            Gets the BindingList of terms of use frames.  USER.  Only supported in ID3v2.3 and ID3v2.4.
            </summary>
            <value>The BindingList of terms of use frames.  USER.  Only supported in ID3v2.3 and ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.CommercialInfoList">
            <summary>
            Gets the BindingList of commercial info frames.  COMR.  Only supported in ID3v2.3 and ID3v2.4.
            </summary>
            <value>The BindingList of commercial info frames.  COMR.  Only supported in ID3v2.3 and ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.EncryptionMethodList">
            <summary>
            Gets the BindingList of encryption method frames.
            </summary>
            <value>The BindingList of encryption method frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.GroupIdentificationList">
            <summary>
            Gets the BindingList of group identification frames.
            </summary>
            <value>The BindingList of group identification frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.PrivateFrameList">
            <summary>
            Gets the BindingList of private frames.  Only valid in ID3v2.3 and ID3v2.4.
            </summary>
            <value>The BindingList of private frames.  Only valid in ID3v2.3 and ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.EncodingTimestamp">
            <summary>
            Gets or sets the date and time the audio was encoded.  Only valid in ID3v2.4.  TDEN in ID3v2.4.
            </summary>
            <value>The date and time the audio was encoded.  Only valid in ID3v2.4.  TDEN in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.TaggingTimestamp">
            <summary>
            Gets or sets the date and time the audio was tagged.  Only valid in ID3v2.4.  TDTG in ID3v2.4.
            </summary>
            <value>The date and time the audio was tagged.  Only valid in ID3v2.4.  TDTG in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Mood">
            <summary>
            Gets or sets the mood.  Only valid in ID3v2.4.  TMOO in ID3v2.4.
            </summary>
            <value>The mood.  Only valid in ID3v2.4.  TMOO in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.AlbumSortOrder">
            <summary>
            Gets or sets the album sort order, which defines a string which should be used
            instead of the album name for sorting purposes.  Only supported in ID3v2.4.  TSOA in ID3v2.4.
            </summary>
            <value>The album sort order, which defines a string which should be used
            instead of the album name for sorting purposes.  Only supported in ID3v2.4.  TSOA in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.ArtistSortOrder">
            <summary>
            Gets or sets the artist sort order, which defines a string which should be used
            instead of the artist name for sorting purposes.  Also known as 'Performer Sort Order'.
            Only supported in ID3v2.4.  TSOP in ID3v2.4.
            </summary>
            <value>The artist sort order, which defines a string which should be used
            instead of the artist name for sorting purposes.  Also known as 'Performer Sort Order'.
            Only supported in ID3v2.4.  TSOP in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.TitleSortOrder">
            <summary>
            Gets or sets the title sort order, which defines a string which should be used
            instead of the title name for sorting purposes.  Only supported in ID3v2.4.  TSOT in ID3v2.4.
            </summary>
            <value>The title sort order.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.ProducedNotice">
            <summary>
            Gets or sets the produced notice, which is a string which must begin with a
            year and a space character.  Intended for
            the production copyright holder of the original sound, not the audio
            file itself.  Only supported in ID3v2.4.  TPRO in ID3v2.4.
            </summary>
            <value>The produced notice.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.SetSubtitle">
            <summary>
            Gets or sets the set subtitle.  Intended for the subtitle of the 'part of
            a set' (for example, a specific disc in a multi disc album) this track belongs to.
            Only supported in ID3v2.4.  TSST in ID3v2.4.
            </summary>
            <value>The set subtitle.  Intended for the subtitle of the 'part of
            a set' (for example, a specific disc in a multi disc album) this track belongs to.
            Only supported in ID3v2.4.  TSST in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.Ownership">
            <summary>
            Gets the ownership frame.  OWNE.  Only supported in ID3v2.3 and ID3v2.4.
            </summary>
            <value>The ownership frame.  OWNE.  Only supported in ID3v2.3 and ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.SeekNextTag">
            <summary>
            Gets the seek next tag frame.  SEEK.  Only supported in ID3v2.4.
            </summary>
            <value>The seek next tag frame.  SEEK.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.SignatureList">
            <summary>
            Gets the BindingList of signatures.  SIGN.  Only supported in ID3v2.4.
            </summary>
            <value>The BindingList of signatures.  SIGN.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.MusicianCreditsList">
            <summary>
            Gets the musician credits list.  TMCL.  Only supported in ID3v2.4.
            </summary>
            <value>The musician credits list.  TMCL.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IFrameContainer.AudioTextList">
            <summary>
            Gets the BindingList of audio text frames.  ATXT.  Only supported in ID3v2.3 and ID3v2.4.
            </summary>
            <value>The BindingList of audio text frames.  ATXT.  Only supported in ID3v2.3 and ID3v2.4.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.IInvolvedPerson">
            <summary>
            Involved person item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IInvolvedPersonList"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IInvolvedPerson.Name">
            <summary>
            Gets or sets the name of the person.
            </summary>
            <value>The name of the person.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IInvolvedPerson.Involvement">
            <summary>
            Gets or sets the person's involvement.
            </summary>
            <value>The person's involvement.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IEqualizationList">
            <summary>
            <para>Equalization</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEqualizationList.InterpolationMethod">
            <summary>
            Gets or sets the interpolation method.  Only valid in ID3v2.4.
            </summary>
            <value>The interpolation method.  Only valid in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEqualizationList.Identification">
            <summary>
            Gets or sets the identification string.  Used to identify the situation and/or
            device where this adjustment should apply.  Only valid in ID3v2.4.
            </summary>
            <value>The identification string.  Only valid in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEqualizationList.Items">
            <summary>
            Gets the BindingList of <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IEqualizationItem"/> items.
            </summary>
            <value>The BindingList of <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IEqualizationItem"/> items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IUrlFrame">
            <summary>
            <para>URL link frames</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               With these frames dynamic data such as webpages with touring
               information, price information or plain ordinary news can be added to
               the tag. There may only be one URL [URL] link frame of its kind in an
               tag, except when stated otherwise in the frame description. If the
               textstring is followed by a termination ($00 (00)) all the following
               information should be ignored and not be displayed. All URL link
               frame identifiers begins with "W". Only URL link frame identifiers
               begins with "W". All URL link frames have the following format:
            </para><para>
                 [Header for 'URL link frame', ID: "W000" - "WZZZ", excluding "WXXX"]<br />
                 URL              [text string]
            </para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IUrlFrame.Value">
            <summary>
            Gets or sets the URL value.
            </summary>
            <value>The URL value.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.ISynchronizedTextItem">
            <summary>
            Synchronized lyrics/text item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.ISynchronizedTextItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.ISynchronizedTextItem.Timestamp">
            <summary>
            Gets or sets the timestamp in milliseconds or frames according to <see cref="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.TimestampFormat"/>.
            </summary>
            <value>The timestamp in milliseconds or frames according to <see cref="P:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText.TimestampFormat"/>.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v1.ID3v1TagVersion">
            <summary>
            ID3v1 tag version.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v1.ID3v1TagVersion.ID3v10">
            <summary>
            ID3v1.0.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v1.ID3v1TagVersion.ID3v11">
            <summary>
            ID3v1.1.
            </summary>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.ResetData">
            <summary>
            Reset all variables
            </summary>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.FindFrame(System.Byte[],IdSharp.Inspection.VBRData@)">
            <summary>
            Find a valid MP3 frame in a byte array.  Sets "m_Frame.Found = true"
            </summary>
            <param name="data">Byte array of data from MP3 file</param>
            <param name="vbrHeader">Method sets this variable to a VBRData struct, if frame found</param>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.IsFrameHeader(System.Byte[])">
            <summary>
            Returns true if valid frame header sent
            </summary>
            <param name="headerData">Header data to test</param>
            <returns>True if valid frame header sent</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.DecodeHeader(System.Byte[])">
            <summary>
            Populates the "m_Frame" struct with data from the header
            </summary>
            <param name="headerData">Header data byte array</param>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.ValidFrameAt(System.Int32,System.Byte[])">
            <summary>
            Returns true if valid frame found at Index
            </summary>
            <param name="index">Index</param>
            <param name="data">Data byte array</param>
            <returns>True if valid frame found at Index</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetFrameLength(IdSharp.Inspection.FrameData)">
            <summary>
            Returns the length of a frame in bytes
            </summary>
            <param name="frame">Frame</param>
            <returns>Length of frame in bytes</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.IsXing(System.Int32,System.Byte[])">
            <summary>
            Returns true if Xing encoder
            </summary>
            <param name="index">Index</param>
            <param name="data">Byte array</param>
            <returns>True of Xing encoder</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.FindVBR(System.Int32,System.Byte[])">
            <summary>
            Returns a VBRData structure from an index in a byte array
            </summary>
            <param name="index">Index</param>
            <param name="data">Byte array</param>
            <returns>VBRData structure</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetVBRFrameOffset(IdSharp.Inspection.FrameData)">
            <summary>
            Returns the offset of the VBRData structure from the start of a frame
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Offset of the VBRData structure</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetCoefficient(IdSharp.Inspection.FrameData)">
            <summary>
            Returns frame size coefficient (used in calculating frame size)
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Frame size coefficient</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetBitRate(IdSharp.Inspection.FrameData)">
            <summary>
            Returns the bitrate of a frame
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Bitrate of the frame</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetSampleRate(IdSharp.Inspection.FrameData)">
            <summary>
            Returns the sample rate of a frame
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Sample rate of the frame</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetPadding(IdSharp.Inspection.FrameData)">
            <summary>
            Returns the padding size of a frame (used in calculating frame size)
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Padding size</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetXingInfo(System.Int32,System.Byte[])">
            <summary>
            Returns VBRData structure from a Xing info tag
            </summary>
            <param name="index">Index in array</param>
            <param name="data">Data byte array</param>
            <returns>VBRData structure</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetFhGInfo(System.Int32,System.Byte[])">
            <summary>
            Returns VBRData structure from an FhG info tag
            </summary>
            <param name="index">Index in array</param>
            <param name="data">Data byte array</param>
            <returns>VBRData structure</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.FindVendorID(System.Byte[])">
            <summary>
            Find a VendorID in a byte array
            </summary>
            <param name="data">Byte array</param>
            <returns>VendorID</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetEncoderID">
            <summary>
            Returns encoder
            </summary>
            <returns>Encoder</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetVBREncoderID">
            <summary>
            Returns encoder from a VBR info tag
            </summary>
            <returns>Encoder from a VBR info tag</returns>
        </member>
        <member name="M:IdSharp.Inspection.MpegAudio.GetCBREncoderID">
            <summary>
            Returns encoder from a CBR info tag
            </summary>
            <returns>Encoder from a CBR info tag</returns>
        </member>
        <member name="P:IdSharp.Inspection.MpegAudio.Version">
            <summary>
            Returns MPEG version
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.MpegAudio.Layer">
            <summary>
            Returns MPEG layer
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.MpegAudio.Encoder">
            <summary>
            Returns MPEG encoder and version (if known)
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment">
            <summary>
            <para>Relative volume adjustment</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>This is a more subjective function than the previous ones. It allows
               the user to say how much he wants to increase/decrease the volume on
               each channel while the file is played. The purpose is to be able to
               align all files to a reference volume, so that you don't have to
               change the volume constantly. This frame may also be used to balance
               adjust the audio. If the volume peak levels are known then this could
               be described with the 'Peak volume right' and 'Peak volume left'
               field. If peak volume is not known these fields could be left zeroed
               or, if no other data follows, be completely omitted. There may only
               be one "RVAD" frame in each tag.</para>
            
                 <para>[Header for 'Relative volume adjustment', ID: "RVAD"]<br />
                 Increment/decrement           %00xxxxxx<br />
                 Bits used for volume descr.   $xx<br />
                 Relative volume change, right $xx xx (xx ...)<br />
                 Relative volume change, left  $xx xx (xx ...)<br />
                 Peak volume right             $xx xx (xx ...)<br />
                 Peak volume left              $xx xx (xx ...)</para>
            
               <para>In the increment/decrement field bit 0 is used to indicate the right
               channel and bit 1 is used to indicate the left channel. 1 is
               increment and 0 is decrement.</para>
            
               <para>The 'bits used for volume description' field is normally $10 (16
               bits) for MPEG 2 layer I, II and III [MPEG] and MPEG 2.5. This value
               may not be $00. The volume is always represented with whole bytes,
               padded in the beginning (highest bits) when 'bits used for volume
               description' is not a multiple of eight.</para>
            
               <para>This datablock is then optionally followed by a volume definition for
               the left and right back channels. If this information is appended to
               the frame the first two channels will be treated as front channels.
               In the increment/decrement field bit 2 is used to indicate the right
               back channel and bit 3 for the left back channel.</para>
            
                 <para>Relative volume change, right back $xx xx (xx ...)<br />
                 Relative volume change, left back  $xx xx (xx ...)<br />
                 Peak volume right back             $xx xx (xx ...)<br />
                 Peak volume left back              $xx xx (xx ...)</para>
            
               <para>If the center channel adjustment is present the following is appended
               to the existing frame, after the left and right back channels. The
               center channel is represented by bit 4 in the increase/decrease
               field.</para>
            
                 <para>Relative volume change, center  $xx xx (xx ...)<br />
                 Peak volume center              $xx xx (xx ...)</para>
            
               <para>If the bass channel adjustment is present the following is appended
               to the existing frame, after the center channel. The bass channel is
               represented by bit 5 in the increase/decrease field.</para>
            
                 <para>Relative volume change, bass  $xx xx (xx ...)<br />
                 Peak volume bass              $xx xx (xx ...)</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.Identification">
            <summary>
            Gets or sets the identification string.  Only supported in ID3v2.4.
            </summary>
            <value>The identification string.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.FrontRightAdjustment">
            <summary>
            Gets or sets the relative volume change in the front right channel.
            </summary>
            <value>The relative volume change in the front right channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.FrontLeftAdjustment">
            <summary>
            Gets or sets the relative volume change in the front left channel.
            </summary>
            <value>The relative volume change in the front left channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.BackRightAdjustment">
            <summary>
            Gets or sets the relative volume change in the back right channel.
            </summary>
            <value>The relative volume change in the back right channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.BackLeftAdjustment">
            <summary>
            Gets or sets the relative volume change in the back left channel.
            </summary>
            <value>The relative volume change in the back left channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.FrontCenterAdjustment">
            <summary>
            Gets or sets the relative volume change in the front center channel.
            </summary>
            <value>The relative volume change in the front center channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.SubwooferAdjustment">
            <summary>
            Gets or sets the relative volume change in the subwoofer/bass.
            </summary>
            <value>The relative volume change in the subwoofer/bass.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.BackCenterAdjustment">
            <summary>
            Gets or sets the relative volume change in the back center channel.  Only supported in ID3v2.4.
            </summary>
            <value>The relative volume change in the back center channel.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.OtherAdjustment">
            <summary>
            Gets or sets the 'other' relative volume change.  Only supported in ID3v2.4.
            </summary>
            <value>The 'other' relative volume change.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.MasterAdjustment">
            <summary>
            Gets or sets the master relative volume change.  Only supported in ID3v2.4.
            </summary>
            <value>The master relative volume change.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.FrontRightPeak">
            <summary>
            Gets or sets the peak volume in the front right channel.
            </summary>
            <value>The peak volume in the front right channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.FrontLeftPeak">
            <summary>
            Gets or sets the peak volume in the front left channel.
            </summary>
            <value>The peak volume in the front left channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.BackRightPeak">
            <summary>
            Gets or sets the peak volume in the back right channel.
            </summary>
            <value>The peak volume in the back right channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.BackLeftPeak">
            <summary>
            Gets or sets the peak volume in the back left channel.
            </summary>
            <value>The peak volume in the back left channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.FrontCenterPeak">
            <summary>
            Gets or sets the peak volume in the front center channel.
            </summary>
            <value>The peak volume in the front center channel.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.SubwooferPeak">
            <summary>
            Gets or sets the peak volume in the subwoofer/bass.
            </summary>
            <value>The peak volume in the subwoofer/bass.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.BackCenterPeak">
            <summary>
            Gets or sets the peak volume in the back center channel.  Only supported in ID3v2.4.
            </summary>
            <value>The peak volume in the back center channel.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.OtherPeak">
            <summary>
            Gets or sets the 'other' peak volume.  Only supported in ID3v2.4.
            </summary>
            <value>The 'other' peak volume.  Only supported in ID3v2.4.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment.MasterPeak">
            <summary>
            Gets or sets the master peak volume.  Only supported in ID3v2.4.
            </summary>
            <value>The master peak volume.  Only supported in ID3v2.4.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IMusicianCreditsList">
            <summary>
            Musician credits list.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IMusicianCreditsList.Items">
            <summary>
            Gets the BindingList of <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IMusicianCreditsItem"/> items.
            </summary>
            <value>The BindingList of <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IMusicianCreditsItem"/> items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IAudioEncryption">
            <summary>
            <para>Audio encryption</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               This frame indicates if the actual audio stream is encrypted, and by
               whom. Since standardisation of such encrypion scheme is beyond this
               document, all "AENC" frames begin with a terminated string with a
               URL containing an email address, or a link to a location where an
               email address can be found, that belongs to the organisation
               responsible for this specific encrypted audio file. Questions
               regarding the encrypted audio should be sent to the email address
               specified. If a $00 is found directly after the 'Frame size' and the
               audiofile indeed is encrypted, the whole file may be considered
               useless.
            <para></para>
               After the 'Owner identifier', a pointer to an unencrypted part of the
               audio can be specified. The 'Preview start' and 'Preview length' is
               described in frames. If no part is unencrypted, these fields should
               be left zeroed. After the 'preview length' field follows optionally a
               datablock required for decryption of the audio. There may be more
               than one "AENC" frames in a tag, but only one with the same 'Owner
               identifier'.
            </para>
                 <para>[Header for 'Audio encryption', ID: "AENC"]<br />
                 Owner identifier   [text string] $00<br />
                 Preview start      $xx xx<br />
                 Preview length     $xx xx<br />
                 Encryption info    [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioEncryption.OwnerIdentifier">
            <summary>
            Gets or sets the owner identifier URL.
            </summary>
            <value>The owner identifier URL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioEncryption.PreviewStart">
            <summary>
            Gets or sets the start of the preview section in frames.
            </summary>
            <value>The start of the preview section in frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioEncryption.PreviewLength">
            <summary>
            Gets or sets the length of the preview section in frames.
            </summary>
            <value>The length of the preview section in frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioEncryption.EncryptionInfo">
            <summary>
            Gets or sets the encryption info.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>A copy of the encryption info.</value>
        </member>
        <member name="T:IdSharp.Utils.GenericBinder`1">
            <summary>
            Provides capability to bind controls and error providers to properties in a business object.
            </summary>
            <typeparam name="T">The type of the business object.  Must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.  
            Optionally, the object may implement <see cref="T:IdSharp.Utils.INotifyInvalidData"/> to notify error providers.</typeparam>
        </member>
        <member name="M:IdSharp.Utils.GenericBinder`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Utils.GenericBinder`1"/> class.
            </summary>
            <param name="component">The business object to bind to.</param>
        </member>
        <member name="M:IdSharp.Utils.GenericBinder`1.#ctor(`0,IdSharp.Utils.IErrorProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Utils.GenericBinder`1"/> class.
            </summary>
            <param name="component">The business object to bind to.</param>
            <param name="errorProvider">The error provider.</param>
        </member>
        <member name="M:IdSharp.Utils.GenericBinder`1.Bind(IdSharp.Utils.IBindableControl,System.String)">
            <summary>
            Binds a control to a property in the business object.
            </summary>
            <param name="bindableControl">The bindable control.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.IID3v2">
            <summary>
            Provides methods for reading, writing, and updating ID3v2 tags.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2.Read(System.String)">
            <summary>
            Reads the raw data from a specified file.
            </summary>
            <param name="path">The file to read from.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2.ReadStream(System.IO.Stream)">
            <summary>
            Reads the raw data from a specified stream.
            </summary>
            <param name="stream">The stream to read from.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2.Save(System.String)">
            <summary>
            Saves the tag to the specified path.
            </summary>
            <param name="path">The path to save the tag.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2.SaveEncoding(System.String,IdSharp.Tagging.ID3v2.EncodingType)">
            <summary>
            Saves the tag to the specified path.
            </summary>
            <param name="path">The path to save the tag.</param>
            <param name="encodingType">The type of text encoding.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2.GetBytes(System.Int32)">
            <summary>
            Gets the bytes of the current ID3v2 tag.
            </summary>
            <param name="minimumSize">The minimum size of the new tag, including the header and footer.</param>
            <returns>The bytes of the current ID3v2 tag.</returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2.Header">
            <summary>
            Gets the ID3v2 header.
            </summary>
            <value>The ID3v2 header.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2.ExtendedHeader">
            <summary>
            Gets the ID3v2 extended header.
            </summary>
            <value>The ID3v2 extended header.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.ILanguageItem">
            <summary>
            A language item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.ILanguageFrame"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.ILanguageItem.LanguageCode">
            <summary>
            Gets or sets the ISO-639-2 language code.
            </summary>
            <value>The ISO-639-2 language code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.ILanguageItem.LanguageDisplay">
            <summary>
            Gets the language display in English.
            </summary>
            <value>The language display in English.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IPrivateFrame">
            <summary>
            <para>Private frame</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>This frame is used to contain information from a software producer
               that its program uses and does not fit into the other frames. The
               frame consists of an 'Owner identifier' string and the binary data.
               The 'Owner identifier' is a null-terminated string with a URL [URL]
               containing an email address, or a link to a location where an email
               address can be found, that belongs to the organisation responsible
               for the frame. Questions regarding the frame should be sent to the
               indicated email address. The tag may contain more than one "PRIV"
               frame but only with different contents. It is recommended to keep the
               number of "PRIV" frames as low as possible.</para>
            
                 <para>[Header for 'Private frame', ID: "PRIV"]<br />
                 Owner identifier      [text string] $00<br />
            	 The private data      [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPrivateFrame.OwnerIdentifier">
            <summary>
            Gets or sets the owner identifier URL.
            </summary>
            <value>The owner identifier URL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPrivateFrame.PrivateData">
            <summary>
            Gets or sets the private data.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>The private data.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ILanguageFrame">
            <summary>
            <para>Language frame</para>
            
            <para>The 'Language' frame should contain the languages of the text or
            lyrics spoken or sung in the audio. The language is represented with
            three characters according to ISO-639-2 [ISO-639-2]. If more than one
            language is used in the text their language codes should follow
            according to the amount of their usage, e.g. "eng" $00 "sve" $00.</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ILanguageFrame.Items">
            <summary>
            Gets the BindingList of language items.
            </summary>
            <value>The BindingList of language items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable">
            <summary>
            <para>MPEG location lookup table</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               To increase performance and accuracy of jumps within a MPEG [MPEG]
               audio file, frames with time codes in different locations in the file
               might be useful. This ID3v2 frame includes references that the
               software can use to calculate positions in the file. After the frame
               header follows a descriptor of how much the 'frame counter' should be
               increased for every reference. If this value is two then the first
               reference points out the second frame, the 2nd reference the 4th
               frame, the 3rd reference the 6th frame etc. In a similar way the
               'bytes between reference' and 'milliseconds between reference' points
               out bytes and milliseconds respectively.
            </para><para>
               Each reference consists of two parts; a certain number of bits, as
               defined in 'bits for bytes deviation', that describes the difference
               between what is said in 'bytes between reference' and the reality and
               a certain number of bits, as defined in 'bits for milliseconds
               deviation', that describes the difference between what is said in
               'milliseconds between reference' and the reality. The number of bits
               in every reference, i.e. 'bits for bytes deviation'+'bits for
               milliseconds deviation', must be a multiple of four. There may only
               be one "MLLT" frame in each tag.
            </para>
                 <para>[Header for 'Location lookup table', ID: "MLLT"]<br />
                 MPEG frames between reference  $xx xx<br />
                 Bytes between reference        $xx xx xx<br />
                 Milliseconds between reference $xx xx xx<br />
                 Bits for bytes deviation       $xx<br />
                 Bits for milliseconds dev.     $xx</para>
            <para>
               Then for every reference the following data is included;
            </para>
                 <para>Deviation in bytes         %xxx....<br />
                 Deviation in milliseconds  %xxx....</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.FramesBetweenReference">
            <summary>
            Gets or sets the frames between references.  The maximum value is 65535.
            </summary>
            <value>The frames between references.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.BytesBetweenReference">
            <summary>
            Gets or sets the bytes between references.  See <see cref="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.Items"/> for more information.  The maximum value is 0xFFFFFF.
            </summary>
            <value>The bytes between references.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.MillisecondsBetweenReference">
            <summary>
            Gets or sets the milliseconds between references.  See <see cref="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.Items"/> for more information.  The maximum value is 0xFFFFFF.
            </summary>
            <value>The milliseconds between references.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.ITempoData">
            <summary>
            A tempo item containing a TempoCode and Timestamp.  <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes"/> is the container for <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.ITempoData"/> items.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.ITempoData.TempoCode">
            <summary>
            Gets or sets the tempo code. 0x00 is used to describe a beat-free time period, which is
            not the same as a music-free time period.  0x01 is used to indicate one
            single beat-stroke followed by a beat-free period.  The maximum value of this field is 510.
            </summary>
            <value>The tempo code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.ITempoData.Timestamp">
            <summary>
            Gets or sets the timestamp in either milliseconds or frames according to <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes"/>).
            </summary>
            <value>The timestamp in either milliseconds or frames according to <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes"/>).</value>
        </member>
        <member name="T:IdSharp.ComInterop.Utils.PictureUtils">
            <summary>
            This class is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="T:IdSharp.ComInterop.Utils.IPictureUtils">
            <summary>
            This interface is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.IPictureUtils.GetIPictureDispFromImage(System.Drawing.Image)">
            <summary>
            Gets an IPictureDisp object from the specified image.
            </summary>
            <param name="image">The image.</param>
            <returns>An IPictureDisp object.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.IPictureUtils.GetIPictureDispFromByteArray(System.Byte[])">
            <summary>
            Gets an IPictureDisp object from a byte array.
            </summary>
            <param name="image">The byte array.</param>
            <returns>An IPictureDisp object.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.PictureUtils.GetIPictureDispFromByteArray(System.Byte[])">
            <summary>
            Gets an IPictureDisp object from a byte array.
            </summary>
            <param name="image">The byte array.</param>
            <returns>An IPictureDisp object.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.PictureUtils.GetIPictureDispFromImage(System.Drawing.Image)">
            <summary>
            Gets an IPictureDisp object from the specified image.
            </summary>
            <param name="image">The image.</param>
            <returns>An IPictureDisp object.</returns>
        </member>
        <member name="T:IdSharp.Utils.InvalidDataEventArgs">
            <summary>
            Provides data for the <see cref="E:IdSharp.Utils.INotifyInvalidData.InvalidData"/> event.
            </summary>
        </member>
        <member name="M:IdSharp.Utils.InvalidDataEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.Utils.InvalidDataEventArgs"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="message">The error or warning message.</param>
        </member>
        <member name="P:IdSharp.Utils.InvalidDataEventArgs.Property">
            <summary>
            Gets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:IdSharp.Utils.InvalidDataEventArgs.Message">
            <summary>
            Gets the error or warning message.
            </summary>
            <value>The error or warning message.</value>
        </member>
        <member name="T:IdSharp.Utils.InvalidDataEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:IdSharp.Utils.INotifyInvalidData.InvalidData"/> event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IPopularimeter">
            <summary>
            <para>Popularimeter</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>The purpose of this frame is to specify how good an audio file is.
               Many interesting applications could be found to this frame such as a
               playlist that features better audiofiles more often than others or it
               could be used to profile a person's taste and find other 'good' files
               by comparing people's profiles. The frame is very simple. It contains
               the email address to the user, one rating byte and a four byte play
               counter, intended to be increased with one for every time the file is
               played. The email is a terminated string. The rating is 1-255 where
               1 is worst and 255 is best. 0 is unknown. If no personal counter is
               wanted it may be omitted.  When the counter reaches all one's, one
               byte is inserted in front of the counter thus making the counter
               eight bits bigger in the same away as the play counter ("PCNT").
               There may be more than one "POPM" frame in each tag, but only one
               with the same email address.</para>
            
                 <para>[Header for 'Popularimeter', ID: "POPM"]<br />
                 Email to user   [text string] $00<br />
                 Rating          $xx<br />
                 Counter         $xx xx xx xx (xx ...)</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPopularimeter.UserEmail">
            <summary>
            Gets or sets the user's email.
            </summary>
            <value>The user's email.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPopularimeter.Rating">
            <summary>
            Gets or sets the rating.  The rating is 1-255 where 1 is worst and 255 is best.  0 is unknown.
            </summary>
            <value>The rating.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPopularimeter.PlayCount">
            <summary>
            Gets or sets the play count.
            </summary>
            <value>The play count.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ICommercial">
             <summary>
             <para>Commercial frame</para>
             
             <para>From the ID3v2 specification:</para>
             
                <para>This frame enables several competing offers in the same tag by
                bundling all needed information. That makes this frame rather complex
                but it's an easier solution than if one tries to achieve the same
                result with several frames. The frame begins, after the frame ID,
                size and encoding fields, with a price string field. A price is
                constructed by one three character currency code, encoded according
                to ISO-4217 alphabetic currency code, followed by a
                numerical value where "." is used as decimal separator. In the price
                string several prices may be concatenated, separated by a "/"
                character, but there may only be one currency of each type.</para>
            
                <para>The price string is followed by an 8 character date string in the
                format YYYYMMDD, describing for how long the price is valid. After
                that is a contact URL, with which the user can contact the seller,
                followed by a one byte 'received as' field. It describes how the
                audio is delivered when bought according to the following list:</para>
            
                     <para>$00  Other<br />
                     $01  Standard CD album with other songs<br />
                     $02  Compressed audio on CD<br />
                     $03  File over the Internet<br />
                     $04  Stream over the Internet<br />
                     $05  As note sheets<br />
                     $06  As note sheets in a book with other sheets<br />
                     $07  Music on other media<br />
                     $08  Non-musical merchandise</para>
            
                <para>Next follows a terminated string with the name of the seller followed
                by a terminated string with a short description of the product. The
                last thing is the ability to include a company logotype. The first of
                them is the 'Picture MIME type' field containing information about
                which picture format is used. In the event that the MIME media type
                name is omitted, "image/" will be implied. Currently only "image/png"
                and "image/jpeg" are allowed. This format string is followed by the
                binary picture data. This two last fields may be omitted if no
                picture is attached. There may be more than one 'commercial frame' in
                a tag, but no two may be identical.</para>
             
                  <para>[Header for 'Commercial frame', ID: "COMR"]<br />
                  Text encoding      $xx<br />
                  Price string       [text string] $00<br />
                  Valid until        [text string]<br />
                  Contact URL        [text string] $00<br />
                  Received as        $xx<br />
                  Name of seller     [text string according to encoding] $00 (00)<br />
                  Description        [text string according to encoding] $00 (00)<br />
                  Picture MIME type  [string] $00<br />
                  Seller logo        [binary data]</para>
             </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.PriceList">
            <summary>
            Gets the BindingList of price information.
            </summary>
            <value>The BindingList of price information.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.ValidUntil">
            <summary>
            Gets or sets the date which the price is valid until.
            </summary>
            <value>The date which the price is valid until.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.ContactUrl">
            <summary>
            Gets or sets the contact URL for the seller.
            </summary>
            <value>The contact URL for the seller.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.ReceivedAs">
            <summary>
            Gets or sets how the audio is delivered when bought.
            </summary>
            <value>How the audio is delivered when bought.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.NameOfSeller">
            <summary>
            Gets or sets the name of the seller.
            </summary>
            <value>The name of the seller.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.Description">
            <summary>
            Gets or sets a short description of the product.
            </summary>
            <value>The short description of the product.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.SellerLogoMimeType">
            <summary>
            Gets or sets the MIME type of the seller logo.
            </summary>
            <value>The MIME type of the seller logo.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ICommercial.SellerLogo">
            <summary>
            Gets or sets the seller logo.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>The seller logo.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IComments">
            <summary>
            <para>Comments</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               This frame is intended for any kind of full text information that
               does not fit in any other frame. It consists of a frame header
               followed by encoding, language and content descriptors and is ended
               with the actual comment as a text string. Newline characters are
               allowed in the comment text string. There may be more than one
               comment frame in each tag, but only one with the same language and
               content descriptor.
            </para>
                 <para>[Header for 'Comment', ID: "COMM"]<br />
                 Text encoding          $xx<br />
                 Language               $xx xx xx<br />
                 Short content descrip. [text string according to encoding] $00 (00)<br />
                 The actual text        [full text string according to encoding]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IComments.LanguageCode">
            <summary>
            Gets or sets the ISO-639-2 language code.
            </summary>
            <value>The ISO-639-2 language code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IComments.Description">
            <summary>
            Gets or sets the comment description.
            </summary>
            <value>The comment description.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IComments.Value">
            <summary>
            Gets or sets the comment text.
            </summary>
            <value>The comment text.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IEncryptionMethod">
            <summary>
            <para>Encryption method registration</para>
            
               <para>To identify with which method a frame has been encrypted the
               encryption method must be registered in the tag with this frame. The
               'Owner identifier' is a null-terminated string with a URL
               containing an email address, or a link to a location where an email
               address can be found, that belongs to the organisation responsible
               for this specific encryption method. Questions regarding the
               encryption method should be sent to the indicated email address. The
               'Method symbol' contains a value that is associated with this method
               throughout the whole tag. Values below $80 are reserved. The 'Method
               symbol' may optionally be followed by encryption specific data. There
               may be several "ENCR" frames in a tag but only one containing the
               same symbol and only one containing the same owner identifier. The
               method must be used somewhere in the tag. See section 3.3.1, flag j
               for more information.  TODO: Was this updated in ID3v2.4?</para>
            
                 <para>[Header for 'Encryption method registration', ID: "ENCR"]<br />
                 Owner identifier    [text string] $00<br />
                 Method symbol       $xx<br />
                 Encryption data     [binary data]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEncryptionMethod.OwnerIdentifier">
            <summary>
            Gets or sets the owner identifier URL or email address.
            </summary>
            <value>The owner identifier URL or email address.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEncryptionMethod.MethodSymbol">
            <summary>
            Gets or sets the encryption method symbol referenced by encrypted frames.  Values below 0x80 are reserved.
            </summary>
            <value>The encryption method symbol referenced by encrypted frames.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEncryptionMethod.EncryptionData">
            <summary>
            Gets or sets the encryption data.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>The encryption data.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IAudioSeekPointIndex">
            <summary>
            Audio Seek Point Index.
            Note: The presence of an ASPI frame requires the existence of a TLEN frame.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioSeekPointIndex.IndexedDataStart">
            <summary>
            Gets or sets the start of the indexed data, which is a byte offset from the beginning of the file.
            </summary>
            <value>The start of the indexed data, which is a byte offset from the beginning of the file.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioSeekPointIndex.IndexedDataLength">
            <summary>
            Gets or sets the length of the indexed audio data in bytes.
            </summary>
            <value>The length of the indexed audio data in bytes.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioSeekPointIndex.BitsPerIndexPoint">
            <summary>
            Gets or sets the number of bits to use per index point.  This value must be 8 or 16.
            </summary>
            <value>The number of bits to use per index point.  This value must be 8 or 16.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioSeekPointIndex.FractionAtIndex">
            <summary>
            FractionAtIndex = (Offset at index)/(IndexedDataLength) * (2^BitsPerIndexPoint)    (rounded down to the nearest integer)
            TODO: Add a new type and methods to make this frame easier to use
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ITagRestrictions">
            <summary>
            Tag restrictions.  See <see cref="P:IdSharp.Tagging.ID3v2.IID3v2ExtendedHeader.TagRestrictions"/>.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.ITagRestrictions.TagSizeRestriction">
            <summary>
            Gets or sets the tag size restriction.
            </summary>
            <value>The tag size restriction.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.ITagRestrictions.TextEncodingRestriction">
            <summary>
            Gets or sets the text encoding restriction.
            </summary>
            <value>The text encoding restriction.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.ITagRestrictions.TextFieldsSizeRestriction">
            <summary>
            Gets or sets the text fields size restriction.
            </summary>
            <value>The text fields size restriction.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.ITagRestrictions.ImageEncodingRestriction">
            <summary>
            Gets or sets the image encoding restriction.
            </summary>
            <value>The image encoding restriction.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.ITagRestrictions.ImageSizeRestriction">
            <summary>
            Gets or sets the image size restriction.
            </summary>
            <value>The image size restriction.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IUniqueFileIdentifier">
            <summary>
            This frame's purpose is to be able to identify the audio file in a
            database that may contain more information relevant to the content.
            Since standardisation of such a database is beyond this document, all
            frames begin with a null-terminated string with a URL [URL]
            containing an email address, or a link to a location where an email
            address can be found, that belongs to the organisation responsible
            for this specific database implementation. Questions regarding the
            database should be sent to the indicated email address. The URL
            should not be used for the actual database queries. The string
            "http://www.id3.org/dummy/ufid.html" should be used for tests.
            Software that isn't told otherwise may safely remove such frames. The
            'Owner identifier' must be non-empty (more than just a termination).
            The 'Owner identifier' is then followed by the actual identifier,
            which may be up to 64 bytes. There may be more than one "UFID" frame
            in a tag, but only one with the same 'Owner identifier'.
            
            [Header for 'Unique file identifier', ID: "UFID"]
            Owner identifier        [text string] $00
            Identifier              [up to 64 bytes binary data]
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IUniqueFileIdentifier.OwnerIdentifier">
            <summary>
            Gets or sets the owner identifier URL encoded in ISO-8859-1.  This value must be unique in the list of unique file identifiers.  See <see cref="P:IdSharp.Tagging.ID3v2.IFrameContainer.UniqueFileIdentifierList"/>.
            </summary>
            <value>The owner identifier URL.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IUniqueFileIdentifier.Identifier">
            <summary>
            Gets or sets the identifier data.  The maximum length for this field is 64 bytes.  Returns a copy of the identifier data, 
            therefore the byte array cannot be modified directly.  Use the set property to update the identifier data.
            </summary>
            <value>A copy of the identifier data.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.IEqualizationItem">
            <summary>
            Equalization item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IEqualizationList"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IEqualizationItem.VolumeAdjustment">
            <summary>
            Gets or sets the direction of the volume adjustment.
            </summary>
            <value>The direction of the volume adjustment.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IEqualizationItem.Frequency">
            <summary>
            Gets or sets the frequency.  Allowed range is 0 - 32767Hz.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IEqualizationItem.Adjustment">
            <summary>
            Gets or sets the adjustment.
            </summary>
            <value>The adjustment.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ISeekNextTag">
            <summary>
            Seek Next Tag.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ISeekNextTag.MinimumOffsetToNextTag">
            <summary>
            Gets or sets the minimum offset to the next tag.  Calculated from the end of this
            tag to the beginning of the next. 
            </summary>
            <value>The minimum offset to the next tag.  Calculated from the end of this
            tag to the beginning of the next.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IRecommendedBufferSize">
            <summary>
            <para>Recommended buffer size</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>Sometimes the server from which a audio file is streamed is aware of
               transmission or coding problems resulting in interruptions in the
               audio stream. In these cases, the size of the buffer can be
               recommended by the server using this frame. If the 'embedded info
               flag' is true (1) then this indicates that an ID3 tag with the
               maximum size described in 'Buffer size' may occur in the audiostream.
               In such case the tag should reside between two MPEG frames, if
               the audio is MPEG encoded. If the position of the next tag is known,
               'offset to next tag' may be used. The offset is calculated from the
               end of tag in which this frame resides to the first byte of the
               header in the next. This field may be omitted. Embedded tags are
               generally not recommended since this could render unpredictable
               behaviour from present software/hardware.</para>
            
               <para>For applications like streaming audio it might be an idea to embed
               tags into the audio stream though. If the clients connects to
               individual connections like HTTP and there is a possibility to begin
               every transmission with a tag, then this tag should include a
               'recommended buffer size' frame. If the client is connected to a
               arbitrary point in the stream, such as radio or multicast, then the
               'recommended buffer size' frame should be included in every tag.
               Every tag that is picked up after the initial/first tag is to be
               considered as an update of the previous one. E.g. if there is a
               "TIT2" frame in the first received tag and one in the second tag,
               then the first should be 'replaced' with the second.</para>
            
               <para>The 'Buffer size' should be kept to a minimum. There may only be one
               "RBUF" frame in each tag.</para>
            
                 <para>[Header for 'Recommended buffer size', ID: "RBUF"]<br />
                 Buffer size               $xx xx xx<br />
                 Embedded info flag        %0000000x<br />
                 Offset to next tag        $xx xx xx xx</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRecommendedBufferSize.BufferSize">
            <summary>
            Gets or sets the recommended size of the buffer.
            </summary>
            <value>The recommended size of the buffer.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRecommendedBufferSize.EmbeddedInfo">
            <summary>
            Gets or sets a value indicating whether an ID3 tag with the maximum size described in 'Buffer Size' may occur in the audio stream.
            </summary>
            <value><c>true</c> if an ID3 tag may occur in the audio stream; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IRecommendedBufferSize.OffsetToNextTag">
            <summary>
            Gets or sets the offset to the next tag.  The offset is calculated from the
               end of the tag in which this frame resides to the first byte of the
               header in the next.  This field is optional.
            </summary>
            <value>The offset to the next tag.</value>
        </member>
        <member name="T:IdSharp.Utils.CRC32">
            <summary>
            Calculates a 32bit Cyclic Redundancy Checksum (CRC) using the
            same polynomial used by Zip.
            </summary>
        </member>
        <member name="M:IdSharp.Utils.CRC32.Calculate(System.String)">
            <summary>
            Returns the CRC32 Checksum of a specified file as a string.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.Utils.CRC32.Calculate(System.IO.Stream)">
            <summary>
            Returns the CRC32 Checksum of an input stream as a string.
            </summary>
            <param name="stream">Input stream.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.Utils.CRC32.Calculate(System.Byte[])">
            <summary>
            Returns the CRC32 Checksum of a byte array as a string.
            </summary>
            <param name="data">The byte array.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.Utils.CRC32.CalculateInt32(System.String)">
            <summary>
            Returns the CRC32 Checksum of a specified file as a four byte signed integer (Int32).
            </summary>
            <param name="path">The full path of the file.</param>
            <returns>CRC32 Checksum as a four byte signed integer (Int32).</returns>
        </member>
        <member name="M:IdSharp.Utils.CRC32.CalculateInt32(System.IO.Stream)">
            <summary>
            Returns the CRC32 Checksum of an input stream as a four byte unsigned integer (UInt32).
            </summary>
            <param name="stream">The stream.</param>
            <returns>CRC32 Checksum as a four byte unsigned integer (UInt32).</returns>
        </member>
        <member name="M:IdSharp.Utils.CRC32.CalculateInt32(System.Byte[])">
            <summary>
            Returns the CRC32 Checksum of a byte array as a four byte signed integer (Int32).
            </summary>
            <param name="data">The byte array.</param>
            <returns>CRC32 Checksum as a four byte signed integer (Int32).</returns>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.Items.IMpegLookupTableItem">
            <summary>
            An MPEG lookup table item.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable"/>.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IMpegLookupTableItem.DeviationInBytes">
            <summary>
            Gets or sets the deviation in bytes.  This value describes the difference between the actual
            byte offset of this <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IMpegLookupTableItem"/> instance and the offset indicated by its position
            and <see cref="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.BytesBetweenReference"/>.
            </summary>
            <value>The deviation in bytes.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.Items.IMpegLookupTableItem.DeviationInMilliseconds">
            <summary>
            Gets or sets the deviation in milliseconds.  This value describes the difference between the actual
            millisecond offset of this <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IMpegLookupTableItem"/> instance and the offset indicated by its position
            and <see cref="P:IdSharp.Tagging.ID3v2.Frames.IMpegLookupTable.MillisecondsBetweenReference"/>.
            </summary>
            <value>The deviation in milliseconds.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.EncodingType">
            <summary>
            The text encoding type used in a frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.EncodingType.ISO88591">
            <summary>
            ISO-8859-1
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.EncodingType.Unicode">
            <summary>
            UCS-2 in ID3v2.2 and ID3v2.3.  UTF-16 in ID3v2.4.  BOM required.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.EncodingType.UTF16BE">
            <summary>
            UTF-16 Big Endian, without BOM.  Supported only in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.EncodingType.UTF8">
            <summary>
            UTF-8.  Supported only in ID3v2.4.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TimestampFormat">
            <summary>
            The time stamp format used in an <see cref="T:IdSharp.Tagging.ID3v2.Frames.IEventTiming">ETCO/ETC</see>, <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedTempoCodes">SYTC/STC</see>, <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText">SYLT/SLT</see> or <see cref="T:IdSharp.Tagging.ID3v2.Frames.IPositionSynchronization">POSS</see> frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TimestampFormat.MpegFrames">
            <summary>
            Absolute time, 32 bit sized, using MPEG frames as unit.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TimestampFormat.Milliseconds">
            <summary>
            Absolute time, 32 bit sized, using milliseconds as unit.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.MusicEvent">
            <summary>
            The music event in an <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.IEventTimingItem">element</see> of an <see cref="T:IdSharp.Tagging.ID3v2.Frames.IEventTiming">ETCO/ETC</see> frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.Padding">
            <summary>
            Padding (has no meaning).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.EndOfInitialSilence">
            <summary>
            End of initial silence.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.IntroStart">
            <summary>
            Intro start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.MainPartStart">
            <summary>
            Mainpart start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.OutroStart">
            <summary>
            Outro start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.OutroEnd">
            <summary>
            Outro end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.VerseStart">
            <summary>
            Verse start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.RefrainStart">
            <summary>
            Refrain start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.InterludeStart">
            <summary>
            Interlude start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.ThemeStart">
            <summary>
            Theme start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.VariationStart">
            <summary>
            Variation start.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.KeyChange">
            <summary>
            Key change.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.TimeChange">
            <summary>
            Time change.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.MomentaryUnwantedNoise">
            <summary>
            Momentary unwanted noise (pop in the audio, etc).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.SustainedNoise">
            <summary>
            Sustained noise.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.SustainedNoiseEnd">
            <summary>
            Sustained noise end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.IntroEnd">
            <summary>
            Intro end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.MainPartEnd">
            <summary>
            Mainpart end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.VerseEnd">
            <summary>
            Verse end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.RefrainEnd">
            <summary>
            Refrain end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.ThemeEnd">
            <summary>
            Theme end.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.Profanity">
            <summary>
            Profanity.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.ProfanityEnd">
            <summary>
            Profanity end.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent1">
            <summary>
            User defined event 1.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent2">
            <summary>
            User defined event 2.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent3">
            <summary>
            User defined event 3.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent4">
            <summary>
            User defined event 4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent5">
            <summary>
            User defined event 5.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent6">
            <summary>
            User defined event 6.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent7">
            <summary>
            User defined event 7.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent8">
            <summary>
            User defined event 8.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent9">
            <summary>
            User defined event 9.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent10">
            <summary>
            User defined event 10.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent11">
            <summary>
            User defined event 11.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent12">
            <summary>
            User defined event 12.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent13">
            <summary>
            User defined event 13.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent14">
            <summary>
            User defined event 14.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent15">
            <summary>
            User defined event 15.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.UserEvent16">
            <summary>
            User defined event 16.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.AudioEnd">
            <summary>
            Audio end (start of silence).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.MusicEvent.AudioFileEnds">
            <summary>
            Audio file ends.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TextContentType">
            <summary>
            Text content type of an <see cref="T:IdSharp.Tagging.ID3v2.Frames.Items.ISynchronizedTextItem">element</see> in the <see cref="T:IdSharp.Tagging.ID3v2.Frames.ISynchronizedText">SYLT/SLT</see> frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.Lyrics">
            <summary>
            Lyrics
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.TextTranscription">
            <summary>
            Text transcription
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.MovementPartName">
            <summary>
            Movement/part name.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.Event">
            <summary>
            Events.  E.g. Don Quijote enters the stage".
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.Chord">
            <summary>
            Chord.  E.g. "Bb F Fsus".
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.TriviaPopup">
            <summary>
            Trivia/pop up information.  Only valid in ID3v2.3 and higher.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.URLsToWebpages">
            <summary>
            URLs to webpages.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextContentType.URLsToImages">
            <summary>
            URLs to images.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.VolumeAdjustmentDirection">
            <summary>
            Volume adjustment direction.  Used by the <see cref="T:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment"/> (RVA2/RVAD/RVA) frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.VolumeAdjustmentDirection.Decrement">
            <summary>
            Represents a volume decrement.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.VolumeAdjustmentDirection.Increment">
            <summary>
            Represents a volume increment.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.PictureType">
            <summary>
            Picture type used by the <see cref="T:IdSharp.Tagging.ID3v2.Frames.IAttachedPicture">APIC/PIC</see> frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.FileIcon32x32Png">
            <summary>
            32x32 pixels 'file icon' (PNG only).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.OtherFileIcon">
            <summary>
            Other file icon.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.CoverFront">
            <summary>
            Cover (front).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.CoverBack">
            <summary>
            Cover (back).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.LeafletPage">
            <summary>
            Leaflet page.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.MediaLabelSideOfCD">
            <summary>
            Media (e.g. label side of CD).
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.LeadArtistPerformer">
            <summary>
            Lead artist/lead performer/soloist.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.ArtistPerformer">
            <summary>
            Artist/performer.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.Conductor">
            <summary>
            Conductor.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.BandOrchestra">
            <summary>
            Band/Orchestra.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.Composer">
            <summary>
            Composer.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.Lyricist">
            <summary>
            Lyricist/text writer.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.RecordingLocation">
            <summary>
            Recording location.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.DuringRecording">
            <summary>
            During recording.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.DuringPerformance">
            <summary>
            During performance.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.MovieVideoScreenCapture">
            <summary>
            Movie/video screen capture.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.ABrightColoredFish">
            <summary>
            A bright colored fish.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.Illustration">
            <summary>
            Illustration.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.BandArtistLogo">
            <summary>
            Band/artist logotype.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.PictureType.PublisherStudioLogo">
            <summary>
            Publisher/Studio logotype.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ReceivedAs">
            <summary>
            Describes how the audio is delivered when bought.  See the <see cref="T:IdSharp.Tagging.ID3v2.Frames.ICommercial">COMR</see> frame.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.StandardCDAlbumWithOtherSongs">
            <summary>
            Standard CD album with other songs.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.CompressedAudioOnCD">
            <summary>
            Compressed audio on CD.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.FileOverTheInternet">
            <summary>
            File over the internet.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.StreamOverTheInternet">
            <summary>
            Stream over the internet.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.AsNoteSheets">
            <summary>
            As note sheets.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.AsNoteSheetsInABookWithOtherSheets">
            <summary>
            As note sheets in a book with other sheets.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.MusicOnOtherMedia">
            <summary>
            Music on other media.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ReceivedAs.NonmusicalMerchandise">
            <summary>
            Non-musical merchandise.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ID3v2TagVersion">
            <summary>
            ID3v2 tag version.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ID3v2TagVersion.ID3v22">
            <summary>
            ID3v2.2.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ID3v2TagVersion.ID3v23">
            <summary>
            ID3v2.3.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ID3v2TagVersion.ID3v24">
            <summary>
            ID3v2.4.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TagVersionOptions">
            <summary>
            Options for reading tags.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagVersionOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagVersionOptions.UseNonSyncSafeFrameSizeID3v24">
            <summary>
            Read ID3v2.4 FrameID sizes as non-syncsafe integers.  The standard is to use syncsafe integers, a change between previous 
            versions and ID3v2.4, however not all tag writers follow this rule.  This value is determined during an initial scan of an
            ID3v2.4 tag which attempts to determine the frame-size storage method in a number of ways, including jumping to the next 
            position indicated by both types of frame sizes and looking for another valid frame ID, or by determining the new position
            is the beginning of padding or the beginning of audio data.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagVersionOptions.AddOneByteToSize">
            <summary>
            Read one byte past the designated end of frame.  Notable offender is a piece of software calling itself CDCOPY.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagVersionOptions.Unsynchronized">
            <summary>
            Stream is unsynchronized.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TagSizeRestriction">
            <summary>
            Tag size restrictions.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagSizeRestriction.NoMore128Frames1MBTotal">
            <summary>
            No more than 128 frames and 1 MB total tag size.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagSizeRestriction.NoMore64Frames128KBTotal">
            <summary>
            No more than 64 frames and 128 KB total tag size.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagSizeRestriction.NoMore32Frames40KBTotal">
            <summary>
            No more than 32 frames and 40 KB total tag size.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TagSizeRestriction.NoMore32Frames4KBTotal">
            <summary>
            No more than 32 frames and 4 KB total tag size.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TextEncodingRestriction">
            <summary>
            Text encoding restrictions.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextEncodingRestriction.NoRestrictions">
            <summary>
            No restrictions.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextEncodingRestriction.ISO88591orUTF8">
            <summary>
            Strings are only encoded with ISO-8859-1 or UTF-8.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.TextFieldsSizeRestriction">
            <summary>
            Text field size restrictions.  Note that the restriction applies to the number of characters, not the number of bytes.
            If a text frame consists of multiple strings, the restriction applies to the sum of all strings in the frame.
            Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextFieldsSizeRestriction.NoRestrictions">
            <summary>
            No restrictions.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextFieldsSizeRestriction.NoMore1024Chars">
            <summary>
            No string is longer than 1024 characters.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextFieldsSizeRestriction.NoMore128Chars">
            <summary>
            No string is longer than 128 characters.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.TextFieldsSizeRestriction.NoMore30Chars">
            <summary>
            No string is longer than 30 characters.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ImageEncodingRestriction">
            <summary>
            Image encoding restrictions.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ImageEncodingRestriction.NoRestrictions">
            <summary>
            No restrictions.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ImageEncodingRestriction.PngOrJpg">
            <summary>
            Images are encoded only with PNG or JPEG.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ImageSizeRestriction">
            <summary>
            Image size restrictions.  Only valid in ID3v2.4.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ImageSizeRestriction.NoRestrictions">
            <summary>
            No restrictions.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ImageSizeRestriction.Max256x256">
            <summary>
            All images are 256x256 pixels or smaller.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ImageSizeRestriction.Max64x64">
            <summary>
            All images are 64x64 pixels or smaller.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.ImageSizeRestriction.Exactly64x64">
            <summary>
            All images are exactly 64x64 pixels, unless required otherwise.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.AudioScramblingMode">
            <summary>
            Audio scrambling mode.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IAudioText"/>.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.AudioScramblingMode.Default">
            <summary>
            Return audio data using the 'unsynchronization' method, Return audio data using the 'unscramble' method
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.AudioScramblingMode.Unsynchronization">
            <summary>
            Return audio data using the 'unsynchronization' method.  The method is intended to be applied to all MPEG audio.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.AudioScramblingMode.Scrambling">
            <summary>
            Return audio data using the 'unscramble' method.  The method is intended to be applied to all non-MPEG audio.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.AudioScramblingMode.None">
            <summary>
            Return audio data as it is stored in the frame.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.InterpolationMethod">
            <summary>
            Interpolation method.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IEqualizationList"/>.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.InterpolationMethod.Band">
            <summary>
            No interpolation is made. A jump from one adjustment level to another occurs in the middle between two adjustment points.
            </summary>
        </member>
        <member name="F:IdSharp.Tagging.ID3v2.InterpolationMethod.Linear">
            <summary>
            Interpolation between adjustment points is linear.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.ChannelType">
            <summary>
            Channel type.  See <see cref="T:IdSharp.Tagging.ID3v2.Frames.IRelativeVolumeAdjustment"/>.
            </summary>
        </member>
        <member name="T:IdSharp.ComInterop.Utils.CRC32">
            <summary>
            This class is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.CRC32.CalculateFromFile(System.String)">
            <summary>
            Returns the CRC32 Checksum of a specified file as a string.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.CRC32.CalculateFromStream(System.IO.Stream)">
            <summary>
            Returns the CRC32 Checksum of an input stream as a string.
            </summary>
            <param name="stream">Input stream.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.CRC32.CalculateFromByteArray(System.Byte[])">
            <summary>
            Returns the CRC32 Checksum of a byte array as a string.
            </summary>
            <param name="data">The byte array.</param>
            <returns>CRC32 Checksum as a string.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.CRC32.CalculateInt32FromFile(System.String)">
            <summary>
            Returns the CRC32 Checksum of a specified file as a four byte signed integer (Int32).
            </summary>
            <param name="path">The full path of the file.</param>
            <returns>
            CRC32 Checksum as a four byte signed integer (Int32).
            </returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.CRC32.CalculateInt32FromStream(System.IO.Stream)">
            <summary>
            Returns the CRC32 Checksum of an input stream as a four byte unsigned integer (UInt32).
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            CRC32 Checksum as a four byte unsigned integer (UInt32).
            </returns>
        </member>
        <member name="M:IdSharp.ComInterop.Utils.CRC32.CalculateInt32FromByteArray(System.Byte[])">
            <summary>
            Returns the CRC32 Checksum of a byte array as a four byte unsigned integer (UInt32).
            </summary>
            <param name="data">The byte array.</param>
            <returns>
            CRC32 Checksum as a four byte unsigned integer (UInt32).
            </returns>
        </member>
        <member name="T:IdSharp.ComInterop.IFrameList">
            <summary>
            This interface is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.IFrameList.AddNew">
            <summary>Adds a new item to the list.</summary>
            <returns>The item added to the list.</returns>
        </member>
        <member name="M:IdSharp.ComInterop.IFrameList.Add(System.Object)">
            <summary>Adds an item to the <see cref="T:System.Collections.IList"></see>.</summary>
            <returns>The position into which the new element was inserted.</returns>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>. </param>
        </member>
        <member name="M:IdSharp.ComInterop.IFrameList.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.IList"></see>.</summary>
        </member>
        <member name="M:IdSharp.ComInterop.IFrameList.Remove(System.Object)">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.</summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>. </param>
        </member>
        <member name="M:IdSharp.ComInterop.IFrameList.RemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:System.Collections.IList"></see> item at the specified index.</summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="P:IdSharp.ComInterop.IFrameList.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <returns>The element at the specified index.</returns>
            <param name="index">The zero-based index of the element to get or set. </param>
        </member>
        <member name="P:IdSharp.ComInterop.IFrameList.Count">
            <summary>
            Gets the number of items in the list.
            </summary>
            <value>The number of items in the list.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IInvolvedPersonList">
            <summary>
            <para>Involved person list</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>Since there might be a lot of people contributing to an audio file in
               various ways, such as musicians and technicians, the 'Text
               information frames' are often insufficient to list everyone involved
               in a project. The 'Involved people list' is a frame containing the
               names of those involved, and how they were involved. The body simply
               contains a terminated string with the involvement directly followed
               by a terminated string with the involvee followed by a new
               involvement and so on. There may only be one "IPLS" frame in each
               tag.</para>
            
                 <para>[Header for 'Involved people list', ID: "IPLS"]<br />
                 Text encoding          $xx<br />
                 People list strings    [text strings according to encoding]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IInvolvedPersonList.Items">
            <summary>
            Gets the BindingList of involved persons.
            </summary>
            <value>The BindingList of involved persons.</value>
        </member>
        <member name="T:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper">
            <summary>
            This class is intended for use with clients accessing the assembly through COM.  See <see cref="N:IdSharp.ComInterop"/>.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.CreateID3v2">
            <summary>
            Creates a new ID3v2 object.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.CreateID3v2FromFile(System.String)">
            <summary>
            Creates a new ID3v2 object from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.CreateID3v2FromStream(System.IO.Stream)">
            <summary>
            Creates a new ID3v2 object from a specified path.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.GetTagSizeFromStream(System.IO.Stream)">
            <summary>
            Gets the ID3v2 tag size from a specified stream.  Returns 128 if an ID3v2 tag exists; otherwise, 0.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.GetTagSize(System.String)">
            <summary>
            Gets the ID3v2 tag size from a specified path.  Returns 128 if an ID3v2 tag exists; otherwise, 0.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.DoesTagExistInStream(System.IO.Stream)">
            <summary>
            Returns <c>true</c> if an ID3v2 tag exists in the specified stream; otherwise, <c>false</c>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.DoesTagExist(System.String)">
            <summary>
            Returns <c>true</c> if an ID3v2 tag exists in the specified path; otherwise, <c>false</c>.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v2.ID3v2Helper.RemoveTag(System.String)">
            <summary>
            Removes an ID3v2 tag from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns><c>true</c> if an ID3v2 tag was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:IdSharp.ComInterop.Tagging.ID3v1.IGenreHelper">
            <summary>
            This interface is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.IGenreHelper.GetGenreIndex(System.String)">
            <summary>
            Gets the index of the genre.  If the genre is not found, 12 is returned to indicate 'Other'.
            </summary>
            <param name="genre">The genre.</param>
            <returns>The index of the genre.  If the genre is not found, 12 is returned to indicate 'Other'.</returns>
        </member>
        <member name="P:IdSharp.ComInterop.Tagging.ID3v1.IGenreHelper.GenreByIndex">
            <summary>
            Gets a string array of ID3v1 genres sorted by index.
            </summary>
            <value>A string array of ID3v1 genres sorted by index.</value>
        </member>
        <member name="T:IdSharp.ComInterop.Tagging.ID3v1.GenreHelper">
            <summary>
            This class is intended for use with clients accessing the assembly through COM.
            </summary>
        </member>
        <member name="M:IdSharp.ComInterop.Tagging.ID3v1.GenreHelper.GetGenreIndex(System.String)">
            <summary>
            Gets the index of the genre.  If the genre is not found, 12 is returned to indicate 'Other'.
            </summary>
            <param name="genre">The genre.</param>
            <returns>The index of the genre.  If the genre is not found, 12 is returned to indicate 'Other'.</returns>
        </member>
        <member name="P:IdSharp.ComInterop.Tagging.ID3v1.GenreHelper.GenreByIndex">
            <summary>
            Gets a string array of ID3v1 genres sorted by index.
            </summary>
            <value>A string array of ID3v1 genres sorted by index.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.PictureTypeHelper">
            <summary>
            Static helper class for <see cref="T:IdSharp.Tagging.ID3v2.PictureType"/>.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.PictureTypeHelper.GetPictureTypeFromString(System.String)">
            <summary>
            Gets the picture type from a string.
            </summary>
            <param name="pictureTypeString">The picture type string.</param>
            <returns>The picture type.</returns>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.PictureTypeHelper.GetStringFromPictureType(IdSharp.Tagging.ID3v2.PictureType)">
            <summary>
            Gets a string from a picture picture.
            </summary>
            <param name="pictureType">Type of the picture.</param>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.PictureTypeHelper.PictureTypes">
            <summary>
            Gets the picture types.
            </summary>
            <value>The picture types.</value>
        </member>
        <member name="T:IdSharp.Utils.ErrorType">
            <summary>
            The type of error to set on a control.  See <see cref="T:IdSharp.Utils.IErrorProvider"/> and <see cref="T:IdSharp.Utils.INotifyInvalidData"/>.
            </summary>
        </member>
        <member name="F:IdSharp.Utils.ErrorType.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:IdSharp.Utils.ErrorType.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:IdSharp.Utils.ErrorType.Information">
            <summary>
            Information.
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IAudioText">
            <summary>
            Audio text frame.  This frame carries a short audio clip which represents the information carried by another ID3v2 frame that is present in the same tag.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.Frames.IAudioText.SetAudioData(System.String,System.Byte[],System.Boolean)">
            <summary>
            Sets the audio data.
            </summary>
            <param name="mimeType">The MIME type of the audio data.</param>
            <param name="audioData">The audio data.  Do not alter the audio data with the scrambling or unsynchronization technique, these will be applied internally.</param>
            <param name="isMpegOrAac">if set to <c>true</c> then the audio is MPEG or AAC.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.Frames.IAudioText.GetAudioData(IdSharp.Tagging.ID3v2.AudioScramblingMode)">
            <summary>
            Gets the audio data.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <param name="audioScramblingMode">The audio scrambling mode.</param>
            <returns>A copy of the audio data.</returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioText.MimeType">
            <summary>
            Gets or sets the MIME type of the audio data.
            </summary>
            <value>The MIME type of the audio data.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IAudioText.EquivalentText">
            <summary>
            Gets or sets the text the audio data represents.  This text should be present in another frame in the ID3v2 tag.
            </summary>
            <value>The text the audio data represents.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IPlayCount">
            <summary>
            Play Count frame.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IPlayCount.Value">
            <summary>
            Gets or sets the play count.
            </summary>
            <value>The play count.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v1.IID3v1">
            <summary>
            ID3v1 interface.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.IID3v1.Read(System.String)">
            <summary>
            Reads the ID3v1 tag from the specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.IID3v1.ReadStream(System.IO.Stream)">
            <summary>
            Reads the ID3v1 tag from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.IID3v1.Save(System.String)">
            <summary>
            Saves the ID3v1 tag to the specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.IID3v1.Reset">
            <summary>
            Resets the properties of the ID3v1 tag to their default values.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.Artist">
            <summary>
            Gets or sets the artist.
            </summary>
            <value>The artist.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.Album">
            <summary>
            Gets or sets the album.
            </summary>
            <value>The album.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.Year">
            <summary>
            Gets or sets the year.
            </summary>
            <value>The year.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.TrackNumber">
            <summary>
            Gets or sets the track number.
            </summary>
            <value>The track number.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.GenreIndex">
            <summary>
            Gets or sets the index of the genre.
            </summary>
            <value>The index of the genre.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v1.IID3v1.TagVersion">
            <summary>
            Gets or sets the ID3v1 tag version.
            </summary>
            <value>The ID3v1 tag version.</value>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1.WriteBytesPadded(System.IO.Stream,System.Byte[],System.Int32)">
            <summary>
            Writes a specified number of bytes to a stream, padding any missing bytes with 0x00.
            </summary>
            <param name="stream">The stream.</param>
            <param name="byteArray">The byte array.</param>
            <param name="length">The number of bytes to be written.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1.GetString(System.IO.Stream,System.Int32)">
            <summary>
            Gets a string from a specified stream using ISO-8859-1 encoding.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="length">The length of the string in bytes.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1.GetString(System.Byte[])">
            <summary>
            Gets a string from a specified byte array using ISO-8859-1 encoding.
            </summary>
            <param name="byteArray">The byte array.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1.GetString(System.String,System.Int32)">
            <summary>
            Gets a trimmed string with a maximum length from a specified string.
            </summary>
            <param name="value">The original string value.</param>
            <param name="maxLength">Maximum length of the string.</param>
        </member>
        <member name="M:IdSharp.Inspection.DescriptiveLameTagReader.DeterminePresetRelatedValues">
            <summary>
            Determine Preset or PresetGuess values
            </summary>
        </member>
        <member name="M:IdSharp.Inspection.DescriptiveLameTagReader.DeterminePreset(IdSharp.Inspection.UsePresetGuess@)">
            <summary>
            Determine Preset
            </summary>
            <param name="usePresetGuess">Method sets this variable to the UsePresetGuess used</param>
            <returns>Preset string</returns>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.IsLameTagFound">
            <summary>
            Returns true if a LAME tag is present
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.VersionString">
            <summary>
            Returns the version string from the LAME tag
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.VersionStringNonLameTag">
            <summary>
            Returns the version string from the old LAME header (pre-3.90)
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.UsePresetGuess">
            <summary>
            Returns the preset guessing method used
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.IsPresetGuessNonBitrate">
            <summary>
            Returns true if the preset is guessed to be a command-line modified version of a preset.
            
            If this value is true, the LameTagInfoPreset property will have the string "(modified)" appended, 
            otherwise it wil have "(guessed)" appended.
            
            Only applies to LAME encoded MP3's that do not have preset info stored in the LAME tag.
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.Preset">
            <summary>
            Returns the actual encoder preset (not guessed)
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.PresetGuess">
            <summary>
            Returns the guessed encoder preset
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.LameTagInfoVersion">
            <summary>
            Returns MPEG version and Layer
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.LameTagInfoEncoder">
            <summary>
            Returns encoder
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.DescriptiveLameTagReader.LameTagInfoPreset">
            <summary>
            Returns preset information
            </summary>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.IID3v2Header">
            <summary>
            ID3v2 tag header.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2Header.Read(System.IO.Stream)">
            <summary>
            Reads the raw data from a specified stream.  The Position property of the stream must be set to the position to begin reading.
            </summary>
            <param name="stream">The stream to read from.  The Position property of the stream must be set to the position to begin reading.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v2.IID3v2Header.GetBytes">
            <summary>
            Gets the bytes of the raw data.
            </summary>
            <returns>The bytes of the raw data.</returns>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.TagVersion">
            <summary>
            Gets or sets the version of the ID3v2 tag.
            </summary>
            <value>The version of the ID3v2 tag.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.TagVersionRevision">
            <summary>
            Gets or sets the tag version revision number.
            </summary>
            <value>The tag version revision number.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.TagSize">
            <summary>
            The ID3v2 tag size is the size of the complete tag after unsychronisation, 
            including padding, excluding the header (and footer, if present) but not excluding the extended header.
            <para>If a footer is present this equals to ('total size' - 20) bytes, otherwise ('total size' - 10) bytes.</para>
            </summary>
            <value>The tag size, excluding the header and footer.
            <para>If a footer is present this equals to ('total size' - 20) bytes, otherwise ('total size' - 10) bytes.</para>
            </value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.UsesUnsynchronization">
            <summary>
            Gets or sets a value indicating whether the tag uses unsynchronization.  Only valid in ID3v2.3 and higher.
            </summary>
            <value><c>true</c> if unsynchronization is used; otherwise, <c>false</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.HasExtendedHeader">
            <summary>
            Indicates whether or not the header is followed by an extended header.  Only valid in ID3v2.3 and higher.
            </summary>
            <value><c>true</c> if extended header is used; otherwise, <c>false</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.IsExperimental">
            <summary>
            Should be used as an 'experimental indicator'. This flag should always be set when the tag is in an
            experimental stage.  Only valid in ID3v2.3 and higher.
            </summary>
            <value><c>true</c> if experimental; otherwise, <c>false</c>.  Only valid in ID3v2.3 and higher.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.IsCompressed">
            <summary>
            Indicates whether or not compression is used on the entire tag.  Only valid in ID3v2.2.
            </summary>
            <value><c>true</c> if compression is used on the entire tag; otherwise <c>false</c>.  Only valid in ID3v2.2.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.IID3v2Header.IsFooterPresent">
            <summary>
            Indicates whether or not a footer is present in the tag.  Only valid in ID3v2.4.
            </summary>
            <value><c>true</c> if a footer is present in the tag; otherwise <c>false</c>.  Only valid in ID3v2.4.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.ILinkedInformation">
            <summary>
            <para>Linked information</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>To keep space waste as low as possible this frame may be used to link
               information from another ID3v2 tag that might reside in another audio
               file or alone in a binary file. It is recommended that this method is
               only used when the files are stored on a CD-ROM or other
               circumstances when the risk of file seperation is low. The frame
               contains a frame identifier, which is the frame that should be linked
               into this tag, a URL field, where a reference to the file where
               the frame is [is] given, and additional ID data, if needed. Data should be
               retrieved from the first tag found in the file to which this link
               points. There may be more than one "LINK" frame in a tag, but only
               one with the same contents. A linked frame is to be considered as
               part of the tag and has the same restrictions as if it was a physical
               part of the tag (i.e. only one "RVRB" frame allowed, whether it's
               linked or not).</para>
            
                 <para>[Header for 'Linked information', ID: "LINK"]<br />
                 Frame identifier        $xx xx xx xx<br />
                 URL                     [text string] $00<br />
                 ID and additional data  [text string(s)]</para>
            
               <para>Frames that may be linked and need no additional data are "IPLS",
               "MCID", "ETCO", "MLLT", "SYTC", "RVAD", "EQUA", "RVRB", "RBUF", the
               text information frames and the URL link frames.</para>
            
               <para>The "TXXX", "APIC", "GEOB" and "AENC" frames may be linked with
               the content descriptor as additional ID data.</para>
            
               <para>The "COMM", "SYLT" and "USLT" frames may be linked with three bytes
               of language descriptor directly followed by a content descriptor as
               additional ID data.</para>
            
            TODO: Did this change with ID3v2.4?
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ILinkedInformation.FrameIdentifier">
            <summary>
            Gets or sets the linked frame ID (ie, "TALB").
            </summary>
            <value>The linked frame ID.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ILinkedInformation.Url">
            <summary>
            Gets or sets the URL where a reference to the file where the frame is is given.
            </summary>
            <value>The URL where a reference to the file where the frame is is given..</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.ILinkedInformation.AdditionalData">
            <summary>
            Gets or sets the additional data.  Returns a copy of the raw data, therefore the byte array cannot 
            be modified directly.  Use the set property to update the raw data.
            </summary>
            <value>The additional data.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IEncryptedMetaFrame">
            <summary>
            Encrypted meta frame.  Only supported in ID3v2.2.
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEncryptedMetaFrame.OwnerIdentifier">
            <summary>
            Gets or sets the owner identifier, a URL containing an email address, or a
            link to a location where an email adress can be found, that belongs to
            the organisation responsible for this specific encrypted meta frame.
            </summary>
            <value>The owner identifier.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEncryptedMetaFrame.ContentExplanation">
            <summary>
            Gets or sets a short content description and explanation as to why the frame is encrypted.
            </summary>
            <value>A short content description and explanation as to why the frame is encrypted.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IEncryptedMetaFrame.EncryptedData">
            <summary>
            Gets or sets the encrypted data.
            </summary>
            <value>The encrypted data.</value>
        </member>
        <member name="T:IdSharp.Tagging.ID3v1.ID3v1Helper">
            <summary>
            Static helper class for ID3v1.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.CreateID3v1">
            <summary>
            Creates a new ID3v1 object.
            </summary>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.CreateID3v1(System.String)">
            <summary>
            Creates a new ID3v1 object from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.CreateID3v1(System.IO.Stream)">
            <summary>
            Creates a new ID3v1 object from a specified path.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.GetTagSize(System.IO.Stream)">
            <summary>
            Gets the ID3v1 tag size from a specified stream.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.GetTagSize(System.String)">
            <summary>
            Gets the ID3v1 tag size from a specified path.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.DoesTagExist(System.IO.Stream)">
            <summary>
            Returns <c>true</c> if an ID3v1 tag exists in the specified stream; otherwise, <c>false</c>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.DoesTagExist(System.String)">
            <summary>
            Returns <c>true</c> if an ID3v1 tag exists in the specified path; otherwise, <c>false</c>.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.Tagging.ID3v1.ID3v1Helper.RemoveTag(System.String)">
            <summary>
            Removes an ID3v1 tag from a specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <returns><c>true</c> if an ID3v1 tag was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.VersionString">
            <summary>
            Returns the version string from the LAME tag
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.VersionStringNonLameTag">
            <summary>
            Returns the version string from the old LAME header (pre-3.90)
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.EncodingMethod">
            <summary>
            Returns Encoding Method Byte
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.Preset">
            <summary>
            Returns Preset WORD
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.PresetGuess">
            <summary>
            Returns guessed preset enum
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.Bitrate">
            <summary>
            Returns bitrate from the LAME tag (not the actual bitrate for VBR files)
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.IsPresetGuessNonBitrate">
            <summary>
            Returns true if the preset is guessed to be a command-line modified version of a preset.
            Only applies to LAME encoded MP3's that do not have preset info stored in the LAME tag.
            </summary>
        </member>
        <member name="P:IdSharp.Inspection.BasicLameTagReader.IsLameTagFound">
            <summary>
            Returns true if a LAME tag is present
            </summary>
        </member>
        <member name="T:IdSharp.Utils.IErrorProvider">
            <summary>
            An interface for wrapping actual error provider controls.  See <see cref="T:IdSharp.Utils.GenericBinder`1"/>.
            </summary>
        </member>
        <member name="M:IdSharp.Utils.IErrorProvider.SetError(System.Windows.Forms.Control,System.String,IdSharp.Utils.ErrorType)">
            <summary>
            Sets the error of a control.
            </summary>
            <param name="control">The control.</param>
            <param name="text">The error text.</param>
            <param name="errorType">The type of error.</param>
        </member>
        <member name="M:IdSharp.Utils.IErrorProvider.ClearError(System.Windows.Forms.Control)">
            <summary>
            Clears the error of a control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IWXXXFrame">
            <summary>
            <para>User defined URL link frame</para>
            
            <para>From the ID3v2 specification:</para>
            
            <para>
               This frame is intended for URL links concerning the audiofile
               in a similar way to the other "W"-frames. The frame body consists
               of a description of the string, represented as a terminated string,
               followed by the actual URL. The URL is always encoded with ISO-8859-1.
               There may be more than one "WXXX" frame in each tag,
               but only one with the same description.
            </para><para>
                 [Header for 'User defined URL link frame', ID: "WXXX"]<br />
                 Text encoding     $xx<br />
                 Description       [text string according to encoding] $00 (00)<br />
                 URL               [text string]
            </para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IWXXXFrame.Description">
            <summary>
            Gets or sets the URL description.
            </summary>
            <value>The URL description.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IWXXXFrame.Value">
            <summary>
            Gets or sets the URL value.
            </summary>
            <value>The URL value.</value>
        </member>
        <member name="M:zlib.SupportClass.Identity(System.Int64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:zlib.SupportClass.Identity(System.UInt64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:zlib.SupportClass.Identity(System.Single)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:zlib.SupportClass.Identity(System.Double)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:zlib.SupportClass.URShift(System.Int32,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:zlib.SupportClass.URShift(System.Int32,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:zlib.SupportClass.URShift(System.Int64,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:zlib.SupportClass.URShift(System.Int64,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:zlib.SupportClass.ReadInput(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a number of characters from the current source Stream and writes the data to the target array at the specified index.</summary>
            <param name="sourceStream">The source Stream to read from.</param>
            <param name="target">Contains the array of characteres read from the source Stream.</param>
            <param name="start">The starting index of the target array.</param>
            <param name="count">The maximum number of characters to read from the source Stream.</param>
            <returns>The number of characters read. The number will be less than or equal to count depending on the data available in the source Stream. Returns -1 if the end of the stream is reached.</returns>
        </member>
        <member name="M:zlib.SupportClass.ReadInput(System.IO.TextReader,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a number of characters from the current source TextReader and writes the data to the target array at the specified index.</summary>
            <param name="sourceTextReader">The source TextReader to read from</param>
            <param name="target">Contains the array of characteres read from the source TextReader.</param>
            <param name="start">The starting index of the target array.</param>
            <param name="count">The maximum number of characters to read from the source TextReader.</param>
            <returns>The number of characters read. The number will be less than or equal to count depending on the data available in the source TextReader. Returns -1 if the end of the stream is reached.</returns>
        </member>
        <member name="M:zlib.SupportClass.ToByteArray(System.String)">
            <summary>
            Converts a string to an array of bytes
            </summary>
            <param name="sourceString">The string to be converted</param>
            <returns>The new array of bytes</returns>
        </member>
        <member name="M:zlib.SupportClass.ToCharArray(System.Byte[])">
            <summary>
            Converts an array of bytes to an array of chars
            </summary>
            <param name="byteArray">The array of bytes to convert</param>
            <returns>The new array of chars</returns>
        </member>
        <member name="M:zlib.SupportClass.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Writes an object to the specified Stream
            </summary>
            <param name="stream">The target Stream</param>
            <param name="objectToSend">The object to be sent</param>
        </member>
        <member name="M:zlib.SupportClass.Serialize(System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes an object to the specified BinaryWriter
            </summary>
            <param name="binaryWriter">The target BinaryWriter</param>
            <param name="objectToSend">The object to be sent</param>
        </member>
        <member name="M:zlib.SupportClass.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserializes an object, or an entire graph of connected objects, and returns the object intance
            </summary>
            <param name="binaryReader">Reader instance used to read the object</param>
            <returns>The object instance</returns>
        </member>
        <member name="M:zlib.SupportClass.WriteStackTrace(System.Exception,System.IO.TextWriter)">
            <summary>
            Writes the exception stack trace to the received stream
            </summary>
            <param name="throwable">Exception to obtain information from</param>
            <param name="stream">Output sream used to write to</param>
        </member>
        <member name="T:IdSharp.Utils.Guard">
            <summary>
            Static class for checking argument values.
            </summary>
        </member>
        <member name="M:IdSharp.Utils.Guard.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Guards against null arguments.
            </summary>
            <param name="value">The value.</param>
            <param name="parameterName">Name of the parameter.</param>
        </member>
        <member name="M:IdSharp.Utils.Guard.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Guards against null or empty string arguments.
            </summary>
            <param name="value">The value.</param>
            <param name="parameterName">Name of the parameter.</param>
        </member>
        <member name="T:IdSharp.Tagging.ID3v2.Frames.IOwnership">
            <summary>
            <para>Ownership frame</para>
            
            <para>From the ID3v2 specification:</para>
            
               <para>The ownership frame might be used as a reminder of a made transaction
               or, if signed, as proof. Note that the "USER" and "TOWN" frames are
               good to use in conjunction with this one. The frame begins, after the
               frame ID, size and encoding fields, with a 'price payed' field. The
               first three characters of this field contains the currency used for
               the transaction, encoded according to ISO-4217 alphabetic
               currency code. Concatenated to this is the actual price payed, as a
               numerical string using "." as the decimal separator. Next is an 8
               character date string (YYYYMMDD) followed by a string with the name
               of the seller as the last field in the frame. There may only be one
               "OWNE" frame in a tag.</para>
            
                 <para>[Header for 'Ownership frame', ID: "OWNE"]<br />
                 Text encoding     $xx<br />
                 Price payed       [text string] $00<br />
                 Date of purch.    [text string]<br />
                 Seller            [text string according to encoding]</para>
            </summary>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IOwnership.PricePaid">
            <summary>
            Gets or sets the price paid in the currency indicated in the CurrencyCode property.
            </summary>
            <value>The price paid in the currency indicated in the CurrencyCode property.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IOwnership.CurrencyCode">
            <summary>
            Gets or sets the ISO-4217 currency code.
            </summary>
            <value>The ISO-4217 currency code.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IOwnership.DateOfPurchase">
            <summary>
            Gets or sets the date of purchase.
            </summary>
            <value>The date of purchase.</value>
        </member>
        <member name="P:IdSharp.Tagging.ID3v2.Frames.IOwnership.Seller">
            <summary>
            Gets or sets the name of the seller.
            </summary>
            <value>The name of the seller.</value>
        </member>
    </members>
</doc>
