(function (a) { a.extend({ tablesorterPager: new function () { var b = function (b) { var c = "addClass", d = "removeClass", e = b.cssDisabled; if (b.updateArrows) { b.container[b.totalRows < b.size ? c : d](e); a(b.cssFirst + "," + b.cssPrev, b.container)[b.page === 0 ? c : d](e); a(b.cssNext + "," + b.cssLast, b.container)[b.page === b.totalPages - 1 ? c : d](e) } }, c = function (c, d) { d.startRow = d.size * d.page + 1; d.endRow = Math.min(d.totalRows, d.size * (d.page + 1)); var e = a(d.cssPageDisplay, d.container), f = d.output.replace(/\{(page|totalPages|startRow|endRow|totalRows)\}/gi, function (a) { return { "{page}": d.page + 1, "{totalPages}": d.totalPages, "{startRow}": d.startRow, "{endRow}": d.endRow, "{totalRows}": d.totalRows}[a] }); if (e[0].tagName === "INPUT") { e.val(f) } else { e.html(f) } b(d); d.container.show(); a(c).trigger("pagerComplete", d) }, d = function (b, c) { var d = a(b); if (!c.pagerPositionSet && c.positionFixed) { if (d.offset) { c.container.css({ top: d.offset().top + d.height() + c.offset + "px", position: "absolute" }) } c.pagerPositionSet = true } }, e = function (b, c) { var d, e = a("tr:not(." + c.cssChildRow + ")", b.tBodies[0]), f = e.length, g = c.page * c.size, h = g + c.size; if (h > f) { h = f } for (d = 0; d < f; d++) { e[d].style.display = d >= g && d < h ? "" : "none" } }, f = function (c, d) { d.size = d.lastSize = parseInt(a(d.cssPageSize, d.container).val(), 10); b(d); if (!d.removeRows) { e(c, d); a(c).bind("sortEnd.pager", function () { e(c, d); a(c).trigger("applyWidgets") }) } }, g = function (b, f, g) { var h, i, j, k = a(b.tBodies[0]), m = f.length, n = g.page * g.size, o = n + g.size; if (m < 1) { return } a(b).trigger("pagerChange", g); if (!g.removeRows) { e(b, g) } else { if (o > f.length) { o = f.length } a.tablesorter.clearTableBody(b); for (h = n; h < o; h++) { j = f[h]; m = j.length; for (i = 0; i < m; i++) { k[0].appendChild(j[i]) } } } d(b, k, g); a(b).trigger("applyWidgets"); if (g.page >= g.totalPages) { l(b, g) } c(b, g) }, h = function (a, b) { b.lastPage = b.page; b.lastSize = b.size; b.size = b.totalRows; b.totalPages = 1; g(a, b.rowsCopy, b) }, i = function (a, b) { if (b.isDisabled) { return } if (b.page < 0 || b.page > b.totalPages - 1) { b.page = 0 } g(a, b.rowsCopy, b) }, j = function (a, b, c) { c.size = c.lastSize = b; c.totalPages = Math.ceil(c.totalRows / c.size); c.pagerPositionSet = false; i(a, c); d(a, c) }, k = function (a, b) { b.page = 0; i(a, b) }, l = function (a, b) { b.page = b.totalPages - 1; i(a, b) }, m = function (a, b) { b.page++; if (b.page >= b.totalPages - 1) { b.page = b.totalPages - 1 } i(a, b) }, n = function (a, b) { b.page--; if (b.page <= 0) { b.page = 0 } i(a, b) }, o = function (b, c) { h(b, c); c.container.hide(); c.appender = null; a(b).unbind("destroy.pager sortEnd.pager enable.pager disable.pager") }, p = function (b, c) { c.isDisabled = false; a("table").trigger("update"); c.page = c.lastPage || 0; c.totalPages = Math.ceil(c.totalRows / c.size); f(b, c) }; this.appender = function (a, b) { var c = a.config; c.rowsCopy = b; c.totalRows = b.length; c.size = c.lastSize || c.size; c.totalPages = Math.ceil(c.totalRows / c.size); g(a, b, c) }; this.defaults = { container: null, output: "{startRow} to {endRow} of {totalRows} rows", updateArrows: true, page: 0, size: 10, positionFixed: true, offset: 0, removeRows: true, cssNext: ".next", cssPrev: ".prev", cssFirst: ".first", cssLast: ".last", cssPageDisplay: ".pagedisplay", cssPageSize: ".pagesize", cssDisabled: "disabled", totalRows: 0, totalPages: 0, appender: this.appender }; this.construct = function (b) { return this.each(function () { var c = a.extend(this.config, a.tablesorterPager.defaults, b), d = this, e = c.container; a(this).trigger("appendCache"); f(d, c); a(c.cssFirst, e).unbind("click.pager").bind("click.pager", function () { k(d, c); return false }); a(c.cssNext, e).unbind("click.pager").bind("click.pager", function () { m(d, c); return false }); a(c.cssPrev, e).unbind("click.pager").bind("click.pager", function () { n(d, c); return false }); a(c.cssLast, e).unbind("click.pager").bind("click.pager", function () { l(d, c); return false }); a(c.cssPageSize, e).unbind("change.pager").bind("change.pager", function () { j(d, parseInt(a(this).val(), 10), c); return false }); a(this).unbind("disable.pager enable.pager destroy.pager").bind("disable.pager", function () { c.isDisabled = true; h(d, c) }).bind("enable.pager", function () { p(d, c) }).bind("destroy.pager", function () { o(d, c) }) }) } } }); a.fn.extend({ tablesorterPager: a.tablesorterPager.construct }) })(jQuery)